{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/dapp-high-roller/src/data/high-roller.tsx","localImports":["/home/arjun/repositories/counterfactual/monorepo/packages/dapp-high-roller/src/data/game-types"],"externalImports":["@stencil/state-tunnel","@stencil/state-tunnel"],"potentialCmpRefs":[{"tag":"context-consumer"}],"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/dapp-high-roller/src/data/high-roller.js"},"jsText":"import { createProviderConsumer } from \"@stencil/state-tunnel\";\r\nimport { GameState } from \"./game-types\";\r\nexport default createProviderConsumer({\r\n    myRoll: [0, 0],\r\n    opponentRoll: [0, 0],\r\n    myScore: 0,\r\n    opponentScore: 0,\r\n    gameState: GameState.Play,\r\n    updateUIState: () => { },\r\n    highRoller: async () => ({ myRoll: [0, 0], opponentRoll: [0, 0] }),\r\n    generateRandomRoll: () => [0, 0],\r\n    highRollerState: {}\r\n}, (subscribe, child) => (h(\"context-consumer\", { subscribe: subscribe, renderer: child })));\r\n"}