const t=window.App.h;import{a as e}from"./chunk-960e9c51.js";import"./chunk-deed3e85.js";import{b as s,e as a}from"./chunk-a0cc8100.js";const{HashZero:n}=ethers.constants;class i{constructor(){this.el={},this.history={},this.appFactory={},this.betAmount="0.01",this.myName="",this.opponent={attributes:{}},this.intermediary="",this.isError=!1,this.isWaiting=!1,this.standalone=!1,this.updateAppInstance=(()=>{}),this.updateOpponent=(()=>{})}async componentWillLoad(){return this.myName=this.account.user.username,await this.matchmake()}async handlePlay(t){t.preventDefault();try{const e={stage:s.WAITING_FOR_P1_COMMITMENT,salt:n,commitHash:n,playerFirstNumber:0,playerSecondNumber:0,versionNumber:0},a=ethers.utils.parseEther(this.account.balance),i=ethers.utils.parseEther(this.betAmount);if(a.lt(i))return void(this.error=`Insufficient funds: You need at least ${this.betAmount} ETH to play.`);if(i.gt(ethers.utils.parseEther("0.01"))||i.lt(ethers.utils.parseEther("0")))return void(this.error="Please, place a bet between 0 and 0.01 ETH.");await this.appFactory.proposeInstallVirtual({initialState:e,proposedToIdentifier:this.opponent.attributes.nodeAddress,responderDeposit:ethers.utils.parseEther(this.betAmount),initiatorDeposit:ethers.utils.parseEther(this.betAmount),timeout:172800,intermediaries:[this.intermediary]}),this.isWaiting=!0}catch(t){}}async matchmake(){try{const t=await this.fetchMatchmake();this.opponent={attributes:{username:t.data.attributes.username,nodeAddress:t.data.attributes.nodeAddress,ethAddress:t.data.attributes.ethAddress}},this.intermediary=t.data.attributes.intermediary,this.error=null,this.updateOpponent(this.opponent)}catch(t){this.error=t}}onErrorSet(){this.isError=!!this.error}handleChange(t,e){this[e]=t.target.value}async fetchMatchmake(){return this.standalone?{data:{type:"matchmaking",id:"2b83cb14-c7aa-5208-8da8-369aeb1a3f24",attributes:{intermediary:this.account.multisigAddress},relationships:{users:{data:{type:"users",id:this.account.user.id}},matchedUser:{data:{type:"matchedUsers",id:"3d54b508-b355-4323-8738-4cdf7290a2fd"}}}},included:[{type:"users",id:this.account.user.id,attributes:{username:this.account.user.username,ethAddress:this.account.user.ethAddress}},{type:"matchedUsers",id:"3d54b508-b355-4323-8738-4cdf7290a2fd",attributes:{username:"MyOpponent",ethAddress:"0x12345"}}]}:new Promise(t=>{const e=s=>{if(!s.data.toString().startsWith("playground:response:matchmake"))return;window.removeEventListener("message",e);const[,a]=s.data.split("|");t(JSON.parse(a))};window.addEventListener("message",e),window.parent.postMessage("playground:request:matchmake","*")})}render(){return this.isWaiting?t("app-waiting",{myName:this.myName,betAmount:this.betAmount,opponentName:this.opponent.attributes.username,isProposing:!0}):t("div",{class:"wrapper"},t("div",{class:"wager"},t("div",{class:"message"},t("img",{class:"message__icon",src:"/assets/images/logo.svg",alt:"High Roller"}),t("h1",{class:"message__title"},"Welcome!"),t("p",{class:"message__body"},"Ready to play?")),t("form",{class:"form",onSubmit:t=>this.handlePlay(t)},t("label",{htmlFor:"myName"},"Your Name"),t("input",{class:"form__input",id:"myName",type:"text",placeholder:"Your name",value:this.myName,onInput:t=>this.handleChange(t,"myName"),readOnly:!0}),t("label",{htmlFor:"betAmount"},"Bet Amount ( ETH )"),t("input",{class:"form__input",id:"betAmount",type:"number",placeholder:"0.01",value:this.betAmount,onInput:t=>this.handleChange(t,"betAmount"),min:0,max:.01,step:1e-8}),this.isError?t("label",{class:"message__error"},this.error instanceof Error?`${this.error.message}: ${this.error.stack}`:this.error):{},t("button",{class:"form__button"},t("div",null,"Play!")))))}static get is(){return"app-wager"}static get encapsulation(){return"shadow"}static get properties(){return{account:{type:"Any",attr:"account"},appFactory:{type:"Any",attr:"app-factory"},betAmount:{state:!0},el:{elementRef:!0},error:{state:!0,watchCallbacks:["onErrorSet"]},history:{type:"Any",attr:"history"},intermediary:{state:!0},isError:{state:!0},isWaiting:{state:!0},myName:{state:!0},opponent:{state:!0},standalone:{type:Boolean,attr:"standalone"},updateAppInstance:{type:"Any",attr:"update-app-instance"},updateOpponent:{type:"Any",attr:"update-opponent"}}}static get style(){return"/**style-placeholder:app-wager:**/"}}a.injectProps(i,["appFactory","updateAppInstance","account","opponent","standalone"]);class r{constructor(){this.el={},this.history={},this.myName="",this.betAmount="",this.opponentName="",this.isProposing=!1,this.seconds=60,this.isCountdownStarted=!1}componentWillLoad(){this.betAmount=e("betAmount",this),this.isProposing=e("isProposing",this)}componentDidLoad(){this.setupWaiting()}countDown(){1!==this.seconds&&setTimeout(()=>{this.seconds=this.seconds-1,this.countDown()},1e3)}goToGame(t,e){console.log(`GO TO GAME: ${t}`),this.history.push({pathname:"/game",state:{appInstanceId:e,opponentName:t,betAmount:this.betAmount,myName:this.myName,isProposing:this.isProposing},query:{},key:""})}startCountdown(){this.isCountdownStarted||(this.isCountdownStarted=!0,this.countDown())}setupWaiting(t,e,s,a){this.isProposing?this.setupWaitingProposing():this.setupWaitingAccepting()}setupWaitingProposing(){this.isCountdownStarted||this.startCountdown()}setupWaitingAccepting(){this.cfProvider.once("updateState",()=>{this.goToGame(this.opponentName,this.appInstance.id)}),this.myName=this.account.user.username,this.opponentName=this.opponent.attributes.username}render(){return t("div",{class:"wrapper"},t("div",{class:"waiting"},t("div",{class:"message"},t("img",{class:"message__icon",src:"/assets/images/logo.svg",alt:"High Roller"}),t("h1",{class:"message__title"},"Waiting Room"),t("p",{class:"message__body"},this.isProposing?"Waiting for another player to join the game in":`Waiting on ${this.opponentName}'s roll...`),this.isProposing?t("p",{class:"countdown"},this.seconds):{},t("p",null,"Player: ",this.myName," ",t("br",null),"Opponent: ",this.opponentName," ",t("br",null),"Bet Amount: ",this.betAmount," ETH"))))}static get is(){return"app-waiting"}static get encapsulation(){return"shadow"}static get properties(){return{account:{type:"Any",attr:"account"},appInstance:{type:"Any",attr:"app-instance"},betAmount:{type:String,attr:"bet-amount",mutable:!0},cfProvider:{type:"Any",attr:"cf-provider"},el:{elementRef:!0},history:{type:"Any",attr:"history"},isCountdownStarted:{state:!0},isProposing:{type:Boolean,attr:"is-proposing",mutable:!0},myName:{type:String,attr:"my-name",mutable:!0},opponent:{type:"Any",attr:"opponent"},opponentName:{type:String,attr:"opponent-name",mutable:!0},seconds:{state:!0}}}static get style(){return"/**style-placeholder:app-waiting:**/"}}a.injectProps(r,["cfProvider","appInstance","account","opponent"]);export{i as AppWager,r as AppWaiting};