{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/dapp-high-roller/src/data/mock-app-instance.ts","localImports":["/home/arjun/repositories/counterfactual/monorepo/packages/dapp-high-roller/src/data/types"],"externalImports":["@counterfactual/types","ethers/utils"],"potentialCmpRefs":[],"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/dapp-high-roller/src/data/mock-app-instance.js"},"jsText":"import { Node } from \"./types\";\r\nexport var AppInstanceEventType;\r\n(function (AppInstanceEventType) {\r\n    AppInstanceEventType[\"UPDATE_STATE\"] = \"updateState\";\r\n    AppInstanceEventType[\"UNINSTALL\"] = \"uninstall\";\r\n    AppInstanceEventType[\"ERROR\"] = \"error\";\r\n})(AppInstanceEventType || (AppInstanceEventType = {}));\r\nexport class AppInstance {\r\n    constructor(info, provider) {\r\n        this.provider = provider;\r\n        this.identityHash = info.identityHash;\r\n        this.appDefinition = info.appDefinition;\r\n        this.abiEncodings = info.abiEncodings;\r\n        this.initiatorDeposit = info.initiatorDeposit;\r\n        this.responderDeposit = info.responderDeposit;\r\n        this.timeout = info.timeout;\r\n        this.intermediaries = info.intermediaries;\r\n    }\r\n    get isVirtual() {\r\n        return !!(this.intermediaries && this.intermediaries.length !== 0);\r\n    }\r\n    async getState() {\r\n        const response = await this.provider.callRawNodeMethod(Node.MethodName.GET_STATE, {\r\n            appInstanceId: this.identityHash\r\n        });\r\n        const result = response.result;\r\n        return result.state;\r\n    }\r\n    async takeAction(action) {\r\n        const response = await this.provider.callRawNodeMethod(Node.MethodName.TAKE_ACTION, {\r\n            action,\r\n            appInstanceId: this.identityHash\r\n        });\r\n        const result = response.result;\r\n        return result.newState;\r\n    }\r\n    async uninstall(intermediary) {\r\n        await this.provider.callRawNodeMethod(intermediary\r\n            ? Node.MethodName.UNINSTALL_VIRTUAL\r\n            : Node.MethodName.UNINSTALL, {\r\n            appInstanceId: this.identityHash,\r\n            intermediaryIdentifier: intermediary\r\n        });\r\n    }\r\n}\r\n"}