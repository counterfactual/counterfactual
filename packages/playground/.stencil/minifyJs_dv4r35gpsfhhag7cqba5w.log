var __awaiter = this && this.__awaiter || function(e, t, n, o) {
  return new (n || (n = Promise))(function(r, i) {
    function fulfilled(e) {
      try {
        step(o.next(e));
      } catch (e) {
        i(e);
      }
    }
    function rejected(e) {
      try {
        step(o.throw(e));
      } catch (e) {
        i(e);
      }
    }
    function step(e) {
      e.done ? r(e.value) : new n(function(t) {
        t(e.value);
      }).then(fulfilled, rejected);
    }
    step((o = o.apply(e, t || [])).next());
  });
}, __generator = this && this.__generator || function(e, t) {
  var n, o, r, i, a = {
    label: 0,
    sent: function() {
      if (1 & r[0]) throw r[1];
      return r[1];
    },
    trys: [],
    ops: []
  };
  return i = {
    next: verb(0),
    throw: verb(1),
    return: verb(2)
  }, "function" == typeof Symbol && (i[Symbol.iterator] = function() {
    return this;
  }), i;
  function verb(i) {
    return function(s) {
      return function(i) {
        if (n) throw new TypeError("Generator is already executing.");
        for (;a; ) try {
          if (n = 1, o && (r = 2 & i[0] ? o.return : i[0] ? o.throw || ((r = o.return) && r.call(o), 
          0) : o.next) && !(r = r.call(o, i[1])).done) return r;
          switch (o = 0, r && (i = [ 2 & i[0], r.value ]), i[0]) {
           case 0:
           case 1:
            r = i;
            break;

           case 4:
            return a.label++, {
              value: i[1],
              done: !1
            };

           case 5:
            a.label++, o = i[1], i = [ 0 ];
            continue;

           case 7:
            i = a.ops.pop(), a.trys.pop();
            continue;

           default:
            if (!(r = (r = a.trys).length > 0 && r[r.length - 1]) && (6 === i[0] || 2 === i[0])) {
              a = 0;
              continue;
            }
            if (3 === i[0] && (!r || i[1] > r[0] && i[1] < r[3])) {
              a.label = i[1];
              break;
            }
            if (6 === i[0] && a.label < r[1]) {
              a.label = r[1], r = i;
              break;
            }
            if (r && a.label < r[2]) {
              a.label = r[2], a.ops.push(i);
              break;
            }
            r[2] && a.ops.pop(), a.trys.pop();
            continue;
          }
          i = t.call(e, a);
        } catch (e) {
          i = [ 6, e ], o = 0;
        } finally {
          n = r = 0;
        }
        if (5 & i[0]) throw i[1];
        return {
          value: i[0] ? i[1] : void 0,
          done: !0
        };
      }([ i, s ]);
    };
  }
};

App.loadBundle("/**:bundle-id:**/", [ "exports", "./chunk-346f9d40.js", "./chunk-faed910a.js", "./chunk-00addb69.js", "./chunk-f52e57f9.js", "./chunk-cc018d56.js", "./chunk-84817f4c.js", "./chunk-7df1cf36.js", "./chunk-008b1f1a.js" ], function(e, t, n, o, r, i, a, s, c) {
  var u = window.App.h, l = /** @class */ function() {
    function AppHome() {
      this.history = {}, this.apps = [], this.canUseApps = !1, this.user = {}, this.web3Detected = !1, 
      this.hasDetectedNetwork = !1, this.networkPermitted = !1, this.enoughCounterpartyBalance = !0, 
      this.enoughLocalBalance = !0, this.ethPendingDepositTxHash = "", this.hasLocalStorage = !1, 
      this.hasCorruptStateChannelState = !1, this.runningApps = [];
    }
    return AppHome.prototype.appClickedHandler = function(e) {
      this.history.push(e.detail.dappContainerUrl, e.detail);
    }, AppHome.prototype.componentWillLoad = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          return this.runningApps = [ Object.assign({}, this.apps[0], {
            notifications: 11
          }) ], [ 2 /*return*/ ];
        });
      });
    }, AppHome.prototype.checkLocalStorage = function() {
      if (!this.hasLocalStorage) {
        var e, t = {
          brave: {
            title: "Please, lower your Shields!",
            instruction: u("span", null, "Please, turn off the ", u("i", null, "Shields Up"), " feature for this site to continue.")
          },
          chrome: {
            title: "Please, allow site data!",
            instruction: u("span", null, "Please, unblock ", u("i", null, "Cookies"), " in your settings, under", " ", u("i", null, "Privacy → Content settings"), ".")
          },
          edge: {
            title: "Please, unblock us!",
            instruction: u("span", null, "Please, uncheck the ", u("i", null, "Block all cookies"), " option in your settings, under ", u("i", null, "Advanced Settings → Cookies"), ".")
          },
          firefox: {
            title: "Please, enable DOM Storage!",
            instruction: u("span", null, "Please, set the ", u("code", null, "dom.storage.enabled"), " key to", " ", u("code", null, "true"), " in your ", u("code", null, "about:config"), " screen.")
          },
          safari: {
            title: "Please, unblock us!",
            instruction: u("span", null, "Please, uncheck the ", u("i", null, "Always block"), " option in your settings, under ", u("i", null, "Preferences → Privacy → Cookies and website data"), ".")
          },
          default: {
            title: "Please, allow us to store data",
            instruction: u("span", null, "The Playground demo uses Local Storage to work properly. Please, configure your browser to grant us access.")
          }
        };
        return e = navigator.userAgent.indexOf("brave") >= 0 ? t.brave : navigator.userAgent.indexOf("Chrome") >= 0 && navigator.vendor.indexOf("Google") >= 0 ? t.chrome : navigator.userAgent.indexOf("Edge") >= 0 ? t.edge : navigator.userAgent.indexOf("Safari") >= 0 ? t.safari : navigator.userAgent.indexOf("Firefox") >= 0 ? t.firefox : t.default, 
        u("div", {
          class: "error-message"
        }, u("h1", null, e.title), u("h2", null, "The Playground Demo uses Local Storage to work properly.", " ", e.instruction), u("p", null, u("strong", null, "What do we store?"), " Basic information the demo needs to work, such as a mnemonic key to generate the address for your local Node instance, and the data the Node itself stores about the activity in the state channels you are part of."));
      }
    }, AppHome.prototype.checkDetectedNetwork = function() {
      if (!this.hasDetectedNetwork) return u("widget-spinner", {
        type: "dots"
      });
    }, AppHome.prototype.getSuggestedWallet = function() {
      return screen.width < 600 ? u("span", null, u("a", {
        href: "https://wallet.coinbase.com/"
      }, "Coinbase Wallet"), ",", u("a", {
        href: "https://www.cipherbrowser.com/"
      }, " Cipher"), ", or", u("a", {
        href: "https://dev.status.im/"
      }, " Status")) : u("a", {
        href: "https://metamask.io/"
      }, "Metamask");
    }, AppHome.prototype.checkWeb3Detected = function() {
      if (!this.web3Detected) return u("div", {
        class: "error-message"
      }, u("h2", null, "Welcome to the Playground demo :) This demo requires a Web3-compatible wallet such as ", this.getSuggestedWallet(), ". Please enable or download one to continue!"));
    }, AppHome.prototype.checkNetworkPermitted = function() {
      if (!this.networkPermitted) return u("div", {
        class: "error-message"
      }, u("h1", null, "Please Switch to Kovan"), u("h2", null, "The Playground demo is currently only deployed on the Kovan test network. Please switch to continue."));
    }, AppHome.prototype.checkCorruptState = function() {
      if (this.hasCorruptStateChannelState) return u("div", {
        class: "error-message"
      }, u("h1", null, "☠️ Corrupt Wallet State"), u("h2", null, "Unfortunately, your state channel state has become corrupted or lost. Please ", u("a", {
        onClick: this.deleteAccount
      }, "click here"), " to start over."));
    }, AppHome.prototype.showApps = function() {
      var e = this;
      return u("div", {
        class: "container"
      }, u("apps-list", {
        apps: this.apps,
        onAppClicked: function(t) {
          return e.appClickedHandler(t);
        },
        name: "Available Apps"
      }), this.welcomeText());
    }, AppHome.prototype.checkUserNotLoggedIn = function() {
      if (!this.user.id) return this.welcomeText();
    }, AppHome.prototype.welcomeText = function() {
      return u("div", {
        class: "welcome-message",
        style: {
          display: this.user.id ? "contents" : "flex"
        }
      }, this.user.id ? void 0 : u("h1", null, "Welcome! 👋"), this.user.id ? void 0 : u("h2", null, "This a demonstration of", " ", u("a", {
        href: "https://counterfactual.com/statechannels"
      }, "generalized state channels"), " ", "on Ethereum."), u("div", {
        class: "flex-container"
      }, u("div", {
        class: "flex-item"
      }, u("h3", null, "What's going on here?"), u("p", null, "You are now a Node in a hub-and-spoke state channels network demo called the Counterfactual Playground, running on Kovan. This webpage is your state channels wallet. Our team runs the hub. Users that connect to our hub can use an unlimited number of off-chain applications with ", u("b", null, "zero fees"), " and", " ", u("b", null, "zero block confirmation times"), ". Want to try? Register or login to start.")), u("div", {
        class: "flex-item"
      }, u("h3", null, "How does it work?"), u("p", null, "This demo is built using", " ", u("a", {
        href: "https://counterfactual.com"
      }, "Counterfactual"), ". We've written all about the internal architecture in", " ", u("a", {
        href: "https://medium.com/statechannels/development-update-3-counterfactual-playground-release-f428be4b8950"
      }, "this blog post"), ". To learn more, check out our", " ", u("a", {
        href: "https://github.com/counterfactual"
      }, "GitHub"), " page and follow us on", " ", u("a", {
        href: "https://twitter.com/statechannels"
      }, "Twitter")))), u("div", {
        class: "flex-container"
      }, u("div", {
        class: "flex-item"
      }, u("h3", null, "What is Counterfactual?"), u("p", null, "Counterfactual is an open-source project comprised of several components:", u("ul", null, u("li", null, "• A library for off-chain applications"), u("li", null, "• An intuitive generalized state channels protocol"), u("li", null, "• A set of Ethereum smart contracts")), " ", "It enables developers to build trustless distributed applications with minimal overhead. Watch", " ", u("a", {
        href: "https://youtu.be/tfKtLNlPL2w?t=72",
        target: "_blank"
      }, "our recent talk"), " ", "at EthCC for more.")), u("div", {
        class: "flex-item"
      }, u("h3", null, "How is this secure?"), u("p", null, "Counterfactual uses state channels, a Layer 2 scalability technique. For a complete overview, read", " ", u("a", {
        href: "https://medium.com/l4-media/making-sense-of-ethereums-layer-2-scaling-solutions-state-channels-plasma-and-truebit-22cb40dcc2f4",
        target: "_blank"
      }, "Making Sense of Layer 2"), " ", "or watch the associated", " ", u("a", {
        href: "https://www.youtube.com/watch?v=RghzB4C9aSg",
        target: "_blank"
      }, "talk from Devcon IV"), "."))));
    }, AppHome.prototype.checkInsufficientBalance = function() {
      if (this.user && this.user.multisigAddress) return this.enoughLocalBalance ? this.enoughCounterpartyBalance ? void 0 : u("div", {
        class: "error-message"
      }, u("h1", null, "The Playground Node has insufficient funds"), u("h2", null, "Eventually we'll take care of this automatically, but in the meantime, you'll need to deposit some ETH.", u("br", null), u("br", null), u("stencil-route-link", {
        url: "/exchange"
      }, "Click here"), " ", "to deposit more funds.")) : u("div", {
        class: "error-message"
      }, u("h1", null, "Insufficient funds"), u("h2", null, "Your balance needs to be of at least 0.01 ETH.", u("br", null), u("br", null), u("stencil-route-link", {
        url: "/exchange"
      }, "Click here"), " ", "to deposit more funds."));
    }, AppHome.prototype.render = function() {
      var e = this.checkLocalStorage() || this.checkDetectedNetwork() || this.checkWeb3Detected() || this.checkNetworkPermitted() || this.checkUserNotLoggedIn() || this.checkInsufficientBalance() || this.checkCorruptState() || this.showApps();
      return this.hasLocalStorage ? u("node-listener", {
        history: this.history
      }, u("layout-header", null), u("section", {
        class: "section fill"
      }, e), u("a", {
        id: "discordbutton",
        href: "https://discord.gg/7SMbDz",
        target: "_blank"
      })) : u("div", null, u("layout-header", null), u("section", {
        class: "section fill"
      }, e));
    }, Object.defineProperty(AppHome, "is", {
      get: function() {
        return "app-home";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(AppHome, "encapsulation", {
      get: function() {
        return "shadow";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(AppHome, "properties", {
      get: function() {
        return {
          apps: {
            type: "Any",
            attr: "apps"
          },
          canUseApps: {
            type: Boolean,
            attr: "can-use-apps"
          },
          deleteAccount: {
            type: "Any",
            attr: "delete-account"
          },
          element: {
            elementRef: !0
          },
          enoughCounterpartyBalance: {
            type: Boolean,
            attr: "enough-counterparty-balance"
          },
          enoughLocalBalance: {
            type: Boolean,
            attr: "enough-local-balance"
          },
          ethPendingDepositAmountWei: {
            type: "Any",
            attr: "eth-pending-deposit-amount-wei"
          },
          ethPendingDepositTxHash: {
            type: String,
            attr: "eth-pending-deposit-tx-hash"
          },
          hasCorruptStateChannelState: {
            type: Boolean,
            attr: "has-corrupt-state-channel-state"
          },
          hasDetectedNetwork: {
            type: Boolean,
            attr: "has-detected-network"
          },
          hasLocalStorage: {
            type: Boolean,
            attr: "has-local-storage"
          },
          history: {
            type: "Any",
            attr: "history"
          },
          networkPermitted: {
            type: Boolean,
            attr: "network-permitted"
          },
          runningApps: {
            state: !0
          },
          user: {
            type: "Any",
            attr: "user"
          },
          web3Detected: {
            type: Boolean,
            attr: "web-3-detected"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(AppHome, "style", {
      get: function() {
        return "/**style-placeholder:app-home:**/";
      },
      enumerable: !0,
      configurable: !0
    }), AppHome;
  }();
  o.AppRegistryTunnel.injectProps(l, [ "apps", "canUseApps" ]), i.WalletTunnel.injectProps(l, [ "web3Detected", "networkPermitted", "hasDetectedNetwork" ]), 
  n.AccountTunnel.injectProps(l, [ "user", "hasCorruptStateChannelState", "enoughCounterpartyBalance", "enoughLocalBalance", "ethPendingDepositAmountWei", "ethPendingDepositTxHash", "deleteAccount" ]);
  var h = /** @class */ function() {
    function FirebaseService() {}
    return FirebaseService.create = function(e) {
      if (FirebaseService.app) return FirebaseService.app;
      FirebaseService.app = window.firebase.initializeApp(e);
    }, FirebaseService.createMessagingService = function(e) {
      return new p(FirebaseService.app.database(), e);
    }, FirebaseService.createStoreService = function(e) {
      return new d(FirebaseService.app.database(), e);
    }, FirebaseService;
  }(), p = /** @class */ function() {
    function FirebaseMessagingService(e, t) {
      this.firebase = e, this.messagingServerKey = t;
    }
    return FirebaseMessagingService.prototype.send = function(e, t) {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(n) {
          switch (n.label) {
           case 0:
            return [ 4 /*yield*/ , this.firebase.ref(this.messagingServerKey + "/" + e + "/" + t.from).set(JSON.parse(JSON.stringify(t))) ];

           case 1:
            return n.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, FirebaseMessagingService.prototype.onReceive = function(e, t) {
      var n = this;
      this.firebase.app ? (this.firebase.ref(this.messagingServerKey + "/" + e).remove(), 
      this.firebase.ref(this.messagingServerKey + "/" + e).on("child_added", function(o) {
        return v(n, void 0, void 0, function() {
          var n;
          return __generator(this, function(r) {
            switch (r.label) {
             case 0:
              return o ? null === (n = o.val()) ? [ 2 /*return*/ ] : (n.from !== o.key && console.error("Incorrect message received", n), 
              [ 4 /*yield*/ , this.firebase.ref(this.messagingServerKey + "/" + e + "/" + n.from).remove() ]) : (console.error("Node with address " + e + ' received a "null" snapshot'), 
              [ 2 /*return*/ ]);

             case 1:
              r.sent();
              try {
                console.log("Received message from", e, n, "Handling via", t), t(n);
              } catch (e) {
                console.error("Encountered an error while handling message callback", e);
              }
              return [ 2 /*return*/ ];
            }
          });
        });
      })) : console.error("Cannot register a connection with an uninitialized firebase handle");
    }, FirebaseMessagingService;
  }(), d = /** @class */ function() {
    function FirebaseStoreService(e, t) {
      this.firebase = e, this.storeServiceKey = t;
    }
    return FirebaseStoreService.prototype.get = function(e) {
      return v(this, void 0, void 0, function() {
        var t;
        return __generator(this, function(n) {
          switch (n.label) {
           case 0:
            return [ 4 /*yield*/ , this.firebase.ref(this.storeServiceKey).child(e).once("value", function(n) {
              null !== n ? t = n.val() : console.debug("Failed to retrieve value at " + e + ': received a "null" snapshot');
            }) ];

           case 1:
            return n.sent(), [ 2 /*return*/ , t ];
          }
        });
      });
    }, FirebaseStoreService.prototype.set = function(e) {
      return v(this, void 0, void 0, function() {
        var t, n, o, r;
        return __generator(this, function(i) {
          switch (i.label) {
           case 0:
            for (t = {}, n = 0, o = e; n < o.length; n++) t[(r = o[n]).key] = JSON.parse(JSON.stringify(r.value));
            return [ 4 /*yield*/ , this.firebase.ref(this.storeServiceKey).update(t) ];

           case 1:
            return i.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, FirebaseStoreService;
  }(), f = {
    42: "kovan"
  }, g = /** @class */ function() {
    function AppRoot() {
      this.loading = !0, this.accountState = {
        enoughCounterpartyBalance: !0,
        enoughLocalBalance: !0
      }, this.walletState = {}, this.appRegistryState = {
        apps: [],
        canUseApps: !1,
        schemaVersion: "",
        maintenanceMode: !1
      }, this.hasLocalStorage = !1, this.modal = u("div", null), this.redirect = u("div", null);
    }
    return AppRoot.prototype.componentWillLoad = function() {
      try {
        localStorage.setItem("playground:localStorage", "true"), localStorage.removeItem("playground:localStorage"), 
        this.hasLocalStorage = !0;
      } catch (e) {
        this.hasLocalStorage = !1;
      }
      this.setup();
    }, AppRoot.prototype.updateAccount = function(e) {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(t) {
          return this.accountState = Object.assign({}, this.accountState, e), this.bindProviderEvents(), 
          this.setSentryUser(this.accountState), [ 2 /*return*/ ];
        });
      });
    }, AppRoot.prototype.setSentryUser = function(e) {
      window.Sentry.configureScope(function(t) {
        t.setUser({
          email: e.user.email,
          username: e.user.username,
          id: e.user.id
        }), t.setExtra("ethAddress", e.user.ethAddress), t.setExtra("multisigAddress", e.user.multisigAddress), 
        t.setExtra("nodeAddress", e.user.nodeAddress);
      });
    }, AppRoot.prototype.updateWalletConnection = function(e) {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(t) {
          return this.walletState = Object.assign({}, this.walletState, e), [ 2 /*return*/ ];
        });
      });
    }, AppRoot.prototype.updateAppRegistry = function(e) {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(t) {
          return this.appRegistryState = Object.assign({}, this.appRegistryState, e), [ 2 /*return*/ ];
        });
      });
    }, AppRoot.prototype.updateMultisigBalance = function(e) {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(t) {
          return e.eq(window.ethers.constants.Zero) && this.accountState.ethPendingDepositAmountWei ? [ 2 /*return*/ ] : (this.updateAccount({
            ethMultisigBalance: e,
            ethPendingDepositAmountWei: void 0
          }), [ 2 /*return*/ ]);
        });
      });
    }, AppRoot.prototype.updateWalletBalance = function(e) {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(t) {
          switch (t.label) {
           case 0:
            return [ 4 /*yield*/ , this.updateWalletConnection({
              ethWeb3WalletBalance: e
            }) ];

           case 1:
            return t.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.setup = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          switch (e.label) {
           case 0:
            return this.loadEnv(), this.loadSentry(), void 0 === window.web3 ? [ 3 /*break*/ , 2 ] : [ 4 /*yield*/ , Promise.all([ this.heartbeat(), this.createNodeProvider(), this.loadApps() ]) ];

           case 1:
            e.sent(), e.label = 2;

           case 2:
            return this.loading = !1, [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.redirectToDeposit = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          return this.modal = {}, this.redirect = u("stencil-router-redirect", {
            url: "/deposit"
          }), [ 2 /*return*/ ];
        });
      });
    }, AppRoot.prototype.createNodeProvider = function() {
      return v(this, void 0, void 0, function() {
        var e;
        return __generator(this, function(t) {
          switch (t.label) {
           case 0:
            return this.hasLocalStorage ? (h.create({
              apiKey: "",
              authDomain: "",
              databaseURL: "",
              projectId: "",
              storageBucket: "",
              messagingSenderId: ""
            }), e = h.createMessagingService("messaging"), [ 4 /*yield*/ , r.CounterfactualNode.create({
              messagingService: e,
              storeService: {
                get: function(e) {
                  return v(this, void 0, void 0, function() {
                    var t, n, o, r, i, a, s, c, u, l;
                    return __generator(this, function(h) {
                      for (t = {}, n = Object.keys(window.localStorage), o = 0, r = n; o < r.length; o++) if ((c = r[o]).includes(e)) {
                        if (i = JSON.parse(window.localStorage.getItem(c)), c === e) return [ 2 /*return*/ , i ];
                        t[c] = i;
                      }
                      for (a = 0, s = Object.keys(t); a < s.length; a++) u = (c = s[a]).split("/")[c.split("/").length - 1], 
                      l = t[c], delete t[c], t[u] = l;
                      return [ 2 /*return*/ , Object.keys(t).length > 0 ? t : void 0 ];
                    });
                  });
                },
                set: function(e) {
                  return v(this, void 0, void 0, function() {
                    return __generator(this, function(t) {
                      return e.forEach(function(e) {
                        window.localStorage.setItem(e.key, JSON.stringify(e.value));
                      }), [ 2 /*return*/ ];
                    });
                  });
                }
              },
              nodeConfig: {
                STORE_KEY_PREFIX: "store"
              },
              network: "kovan"
            }) ]) : [ 2 /*return*/ ];

           case 1:
            return t.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.loadEnv = function() {
      window.globalConfig = {
        TIER: "production"
      };
    }, AppRoot.prototype.loadSentry = function() {
      window.Sentry.init({
        dsn: "https://6037586d37124e518f4718d9dd46b18b@sentry.io/1383439",
        release: "playground@" + Date.now(),
        environment: "production"
      });
    }, AppRoot.prototype.loadApps = function() {
      return v(this, void 0, void 0, function() {
        var e;
        return __generator(this, function(t) {
          switch (t.label) {
           case 0:
            return [ 4 /*yield*/ , a.PlaygroundAPIClient.getApps() ];

           case 1:
            return e = t.sent(), [ 4 /*yield*/ , this.updateAppRegistry({
              apps: e
            }) ];

           case 2:
            return t.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.heartbeat = function() {
      return v(this, void 0, void 0, function() {
        var e = this;
        return __generator(this, function(t) {
          return setInterval(function() {
            return v(e, void 0, void 0, function() {
              return __generator(this, function(e) {
                return [ 2 /*return*/ , this.doHeartbeat() ];
              });
            });
          }, 3e4), this.doHeartbeat(), [ 2 /*return*/ ];
        });
      });
    }, AppRoot.prototype.doHeartbeat = function() {
      return v(this, void 0, void 0, function() {
        var e;
        return __generator(this, function(t) {
          switch (t.label) {
           case 0:
            return [ 4 /*yield*/ , a.PlaygroundAPIClient.getHeartbeat() ];

           case 1:
            return e = t.sent(), this.updateAppRegistry(Object.assign({}, e)), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.bindProviderEvents = function() {
      var e = this.accountState.user, t = e.multisigAddress, n = e.ethAddress, o = this.walletState.provider;
      o && t && n && (n && (o.removeAllListeners(n), o.on(n, this.updateWalletBalance.bind(this))), 
      t && (o.removeAllListeners(t), o.on(t, this.updateMultisigBalance.bind(this))));
    }, AppRoot.prototype.buildSignatureMessageForLogin = function(e) {
      return [ "PLAYGROUND ACCOUNT LOGIN", "Ethereum address: " + e ].join("\n");
    }, AppRoot.prototype.login = function() {
      return v(this, void 0, void 0, function() {
        var e, t, n;
        return __generator(this, function(o) {
          switch (o.label) {
           case 0:
            return [ 4 /*yield*/ , this.walletState.signer.signMessage(this.buildSignatureMessageForLogin((e = this.accountState.user).ethAddress)) ];

           case 1:
            return t = o.sent(), [ 4 /*yield*/ , a.PlaygroundAPIClient.login({
              ethAddress: e.ethAddress
            }, t) ];

           case 2:
            return n = o.sent(), window.localStorage.setItem("playground:user:token", n.token), 
            [ 4 /*yield*/ , this.updateAccount({
              user: n
            }) ];

           case 3:
            return o.sent(), [ 4 /*yield*/ , this.getBalances() ];

           case 4:
            return o.sent(), [ 2 /*return*/ , n ];
          }
        });
      });
    }, AppRoot.prototype.deleteAccount = function() {
      return v(this, void 0, void 0, function() {
        var e, t;
        return __generator(this, function(n) {
          switch (n.label) {
           case 0:
            return (e = window.localStorage.getItem("playground:user:token")) ? [ 4 /*yield*/ , a.PlaygroundAPIClient.getUser(e) ] : (console.error("Couldn't delete account; no token was provided"), 
            [ 2 /*return*/ ]);

           case 1:
            t = n.sent(), n.label = 2;

           case 2:
            return n.trys.push([ 2, , 4, 5 ]), [ 4 /*yield*/ , a.PlaygroundAPIClient.deleteAccount(t) ];

           case 3:
            return n.sent(), this.updateAccount({
              hasCorruptStateChannelState: !1
            }), [ 3 /*break*/ , 5 ];

           case 4:
            return this.logout(), [ 2 /*return*/ ];

           case 5:
            return [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.getBalances = function(e) {
      var t = (void 0 === e ? {} : e).poll, n = void 0 !== t && t;
      return v(this, void 0, void 0, function() {
        var e, t, o, i, a, s, c, u, l, h, p, d, f, g, y, w, b, m, S = this;
        return __generator(this, function(A) {
          switch (A.label) {
           case 0:
            if (e = window.ethers.utils.parseEther("0.01"), o = (t = this.accountState.user).multisigAddress, 
            i = t.ethAddress, a = t.nodeAddress, s = this.walletState.provider, c = r.CounterfactualNode.getCfProvider(), 
            !o || !i) return [ 2 /*return*/ , {
              ethFreeBalanceWei: window.ethers.constants.Zero,
              ethMultisigBalance: window.ethers.constants.Zero
            } ];
            A.label = 1;

           case 1:
            return A.trys.push([ 1, 3, , 6 ]), [ 4 /*yield*/ , c.getFreeBalanceState(o) ];

           case 2:
            return u = A.sent(), [ 3 /*break*/ , 6 ];

           case 3:
            return (l = A.sent()).toString().includes("Call to getFreeBalanceState failed") ? [ 4 /*yield*/ , this.updateAccount({
              hasCorruptStateChannelState: !0
            }) ] : [ 3 /*break*/ , 5 ];

           case 4:
            return A.sent(), [ 2 /*return*/ , {
              ethFreeBalanceWei: window.ethers.constants.Zero,
              ethMultisigBalance: window.ethers.constants.Zero
            } ];

           case 5:
            throw l;

           case 6:
            return h = window.ethers.utils.computeAddress(window.ethers.utils.HDNode.fromExtendedKey(a).derivePath(String(0)).publicKey), 
            p = Object.keys(u).filter(function(e) {
              return e !== h;
            })[0], f = u[p], y = {
              ethFreeBalanceWei: d = u[h]
            }, [ 4 /*yield*/ , s.getBalance(o) ];

           case 7:
            return y.ethMultisigBalance = A.sent(), y.ethCounterpartyFreeBalanceWei = f, g = y, 
            w = f.gte(e), b = d.gte(e), [ 4 /*yield*/ , this.updateAppRegistry({
              canUseApps: m = w && b
            }) ];

           case 8:
            return A.sent(), [ 4 /*yield*/ , this.updateAccount(Object.assign({}, g, {
              enoughCounterpartyBalance: w,
              enoughLocalBalance: b
            })) ];

           case 9:
            return A.sent(), n && (m ? clearTimeout(this.balancePolling) : this.balancePolling = setTimeout(function() {
              return v(S, void 0, void 0, function() {
                return __generator(this, function(e) {
                  return [ 2 /*return*/ , this.getBalances({
                    poll: n
                  }) ];
                });
              });
            }, 1e3)), [ 2 /*return*/ , g ];
          }
        });
      });
    }, AppRoot.prototype.resetPendingDepositState = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          switch (e.label) {
           case 0:
            return [ 4 /*yield*/ , this.updateAccount({
              ethPendingDepositAmountWei: void 0,
              ethPendingDepositTxHash: void 0
            }) ];

           case 1:
            return e.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.resetPendingWithdrawalState = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          switch (e.label) {
           case 0:
            return [ 4 /*yield*/ , this.updateAccount({
              ethPendingWithdrawalAmountWei: void 0,
              ethPendingWithdrawalTxHash: void 0
            }) ];

           case 1:
            return e.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.deposit = function(e) {
      return v(this, void 0, void 0, function() {
        var t, n, o, i, s, c, u = this;
        return __generator(this, function(l) {
          switch (l.label) {
           case 0:
            return t = localStorage.getItem("playground:user:token"), [ 4 /*yield*/ , a.PlaygroundAPIClient.getUser(t) ];

           case 1:
            n = l.sent().multisigAddress, (o = r.CounterfactualNode.getCfProvider()).once(r.Node.EventName.DEPOSIT_STARTED, function(t) {
              return v(u, void 0, void 0, function() {
                return __generator(this, function(n) {
                  switch (n.label) {
                   case 0:
                    return console.log("Playground#deposit: DEPOSIT_STARTED"), [ 4 /*yield*/ , this.updateAccount({
                      ethPendingDepositTxHash: t.txHash,
                      ethPendingDepositAmountWei: e
                    }) ];

                   case 1:
                    return n.sent(), [ 2 /*return*/ ];
                  }
                });
              });
            }), o.once(r.Node.EventName.DEPOSIT_CONFIRMED, function(e) {
              return v(u, void 0, void 0, function() {
                return __generator(this, function(e) {
                  switch (e.label) {
                   case 0:
                    return [ 4 /*yield*/ , this.getBalances() ];

                   case 1:
                    return e.sent(), [ 4 /*yield*/ , this.resetPendingDepositState() ];

                   case 2:
                    return e.sent(), [ 2 /*return*/ ];
                  }
                });
              });
            }), l.label = 2;

           case 2:
            return l.trys.push([ 2, 4, , 5 ]), s = window.ethers.utils.bigNumberify(e), [ 4 /*yield*/ , o.deposit(n, s) ];

           case 3:
            return i = l.sent(), [ 3 /*break*/ , 5 ];

           case 4:
            return c = l.sent(), console.error(c), [ 3 /*break*/ , 5 ];

           case 5:
            return [ 2 /*return*/ , i ];
          }
        });
      });
    }, AppRoot.prototype.withdraw = function(e) {
      return v(this, void 0, void 0, function() {
        var t, n, o, i, a, s = this;
        return __generator(this, function(c) {
          switch (c.label) {
           case 0:
            t = this.accountState.user.multisigAddress, (n = r.CounterfactualNode.getCfProvider()).once(r.Node.EventName.WITHDRAWAL_STARTED, function(t) {
              s.updateAccount({
                ethPendingWithdrawalTxHash: t.txHash,
                ethPendingWithdrawalAmountWei: e
              });
            }), c.label = 1;

           case 1:
            return c.trys.push([ 1, 3, , 4 ]), i = window.ethers.utils.bigNumberify(e), [ 4 /*yield*/ , n.withdraw(t, i, this.accountState.user.ethAddress) ];

           case 2:
            return o = c.sent(), [ 3 /*break*/ , 4 ];

           case 3:
            return a = c.sent(), console.error(a), [ 3 /*break*/ , 4 ];

           case 4:
            return [ 4 /*yield*/ , this.getBalances() ];

           case 5:
            return c.sent(), [ 4 /*yield*/ , this.resetPendingWithdrawalState() ];

           case 6:
            return c.sent(), [ 2 /*return*/ , o ];
          }
        });
      });
    }, AppRoot.prototype.waitForMultisig = function() {
      r.CounterfactualNode.getCfProvider().once(r.Node.EventName.CREATE_CHANNEL, this.setMultisigAddress.bind(this));
    }, AppRoot.prototype.setMultisigAddress = function(e) {
      return v(this, void 0, void 0, function() {
        var t;
        return __generator(this, function(n) {
          switch (n.label) {
           case 0:
            return (t = this.accountState.user).multisigAddress = e.data.multisigAddress, [ 4 /*yield*/ , this.updateAccount({
              user: t
            }) ];

           case 1:
            return n.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.autoLogin = function() {
      return v(this, void 0, void 0, function() {
        var e, t, n;
        return __generator(this, function(o) {
          switch (o.label) {
           case 0:
            if (!(e = window.localStorage.getItem("playground:user:token"))) return [ 2 /*return*/ ];
            if ((t = this.accountState.user) && t.username) return [ 3 /*break*/ , 4 ];
            o.label = 1;

           case 1:
            return o.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , a.PlaygroundAPIClient.getUser(e) ];

           case 2:
            return n = o.sent(), this.updateAccount({
              user: n
            }), [ 3 /*break*/ , 4 ];

           case 3:
            return o.sent(), this.logout(), [ 2 /*return*/ ];

           case 4:
            return this.accountState.user.multisigAddress ? [ 3 /*break*/ , 5 ] : (this.waitForMultisig(), 
            [ 3 /*break*/ , 7 ]);

           case 5:
            return [ 4 /*yield*/ , this.getBalances() ];

           case 6:
            o.sent(), o.label = 7;

           case 7:
            return [ 2 /*return*/ ];
          }
        });
      });
    }, AppRoot.prototype.logout = function() {
      window.localStorage.removeItem("playground:user:token"), this.updateAccount({
        user: {}
      });
    }, AppRoot.prototype.getEtherscanAddressURL = function(e) {
      return "https://" + f[this.walletState.network] + ".etherscan.io/address/" + e;
    }, AppRoot.prototype.getEtherscanTxURL = function(e) {
      return "https://" + f[this.walletState.network] + ".etherscan.io/tx/" + e;
    }, AppRoot.prototype.upgrade = function() {
      var e = [ "MNEMONIC", "playground:matchmakeWith" ], t = e.map(function(e) {
        var t;
        return (t = {})[e] = localStorage.getItem(e), t;
      }).reduce(function(e, t) {
        return Object.assign({}, e, t);
      }, {});
      window.localStorage.clear(), e.forEach(function(e) {
        window.localStorage.setItem(e, t[e]);
      }), window.localStorage.setItem("playground:schemaVersion", this.appRegistryState.schemaVersion), 
      window.location.reload();
    }, AppRoot.prototype.render = function() {
      if (this.accountState = Object.assign({}, this.accountState, {
        updateAccount: this.updateAccount.bind(this),
        waitForMultisig: this.waitForMultisig.bind(this),
        login: this.login.bind(this),
        logout: this.logout.bind(this),
        deleteAccount: this.deleteAccount.bind(this),
        getBalances: this.getBalances.bind(this),
        autoLogin: this.autoLogin.bind(this),
        deposit: this.deposit.bind(this),
        withdraw: this.withdraw.bind(this)
      }), this.walletState.updateWalletConnection = this.updateWalletConnection.bind(this), 
      this.walletState.getEtherscanAddressURL = this.getEtherscanAddressURL.bind(this), 
      this.walletState.getEtherscanTxURL = this.getEtherscanTxURL.bind(this), this.appRegistryState.updateAppRegistry = this.updateAppRegistry.bind(this), 
      this.appRegistryState.maintenanceMode) return u("widget-dialog", {
        visible: !0,
        dialogTitle: "Under maintenance",
        content: u("p", null, "Sorry! We're currently working on a few things behind the scenes to keep the demo functional. Please come back later. In the meantime, follow us on Twitter", u("a", {
          href: "https://twitter.com/statechannels",
          target: "_blank"
        }, " ", "@statechannels", " "), "to learn more and keep up to date on the project.")
      });
      if (this.loading) return u("widget-spinner", {
        type: "dots"
      });
      var e = window.localStorage.getItem("playground:schemaVersion");
      return e && e !== this.appRegistryState.schemaVersion ? u("widget-dialog", {
        visible: !0,
        dialogTitle: "A new version of the Playground is available!",
        content: "Click OK to update your experience.",
        primaryButtonText: "OK",
        onPrimaryButtonClicked: this.upgrade.bind(this)
      }) : u(i.WalletTunnel.Provider, {
        state: this.walletState
      }, u(n.AccountTunnel.Provider, {
        state: this.accountState
      }, u(o.AppRegistryTunnel.Provider, {
        state: this.appRegistryState
      }, u("div", {
        class: "app-root wrapper"
      }, u("main", {
        class: "wrapper__content"
      }, this.hasLocalStorage ? u("stencil-router", null, u("stencil-route-switch", {
        scrollTopOffset: 0
      }, u("stencil-route", {
        url: "/",
        component: "app-home",
        exact: !0,
        componentProps: {
          hasLocalStorage: this.hasLocalStorage
        }
      }), u("stencil-route", {
        url: "/dapp/:dappName",
        component: "dapp-container"
      }), u("stencil-route", {
        url: "/account",
        component: "account-edit"
      }), u("stencil-route", {
        url: "/exchange",
        component: "account-exchange"
      }), u("stencil-route", {
        url: "/register",
        component: "account-register"
      }), u("stencil-route", {
        url: "/deposit",
        component: "account-deposit"
      }))) : u("app-home", {
        hasLocalStorage: this.hasLocalStorage
      })), u("webthree-connector", {
        accountState: this.accountState,
        walletState: this.walletState
      }), this.modal || {}, this.redirect || {}))));
    }, Object.defineProperty(AppRoot, "is", {
      get: function() {
        return "app-root";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(AppRoot, "encapsulation", {
      get: function() {
        return "shadow";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(AppRoot, "properties", {
      get: function() {
        return {
          accountState: {
            state: !0
          },
          appRegistryState: {
            state: !0
          },
          balancePolling: {
            state: !0
          },
          hasLocalStorage: {
            state: !0
          },
          loading: {
            state: !0
          },
          modal: {
            state: !0
          },
          redirect: {
            state: !0
          },
          walletState: {
            state: !0
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(AppRoot, "style", {
      get: function() {
        return "/**style-placeholder:app-root:**/";
      },
      enumerable: !0,
      configurable: !0
    }), AppRoot;
  }(), y = [ "42" ], w = /** @class */ function() {
    function Web3Connector() {
      this.accountState = {}, this.walletState = {};
    }
    return Web3Connector.prototype.getProvider = function() {
      return new window.ethers.providers.Web3Provider(window.web3.currentProvider);
    }, Web3Connector.prototype.getCurrentAddress = function() {
      return window.web3.eth.accounts[0];
    }, Web3Connector.prototype.getCurrentNetwork = function() {
      return window.web3.version.network;
    }, Web3Connector.prototype.getETHBalance = function() {
      return v(this, void 0, void 0, function() {
        var e;
        return __generator(this, function(t) {
          switch (t.label) {
           case 0:
            return (e = this.getProvider()) && this.isUnlocked() ? [ 4 /*yield*/ , e.getSigner().getBalance() ] : [ 3 /*break*/ , 2 ];

           case 1:
            return [ 2 /*return*/ , t.sent() ];

           case 2:
            return [ 2 /*return*/ , window.ethers.constants.Zero ];
          }
        });
      });
    }, Web3Connector.prototype.isWeb3Detected = function() {
      return void 0 !== window.web3;
    }, Web3Connector.prototype.isMetamask = function() {
      return window.web3.isMetamask || window.web3.currentProvider.isMetamask;
    }, Web3Connector.prototype.isUnlocked = function() {
      return void 0 !== window.web3.eth.accounts[0];
    }, Web3Connector.prototype.isOnPermittedNetwork = function() {
      return y.includes(this.getCurrentNetwork());
    }, Web3Connector.prototype.getCurrentWalletState = function() {
      return v(this, void 0, void 0, function() {
        var e;
        return __generator(this, function(t) {
          return (e = {
            network: "",
            connected: !1,
            metamaskUnlocked: !1,
            web3Detected: this.walletState.web3Detected,
            web3Enabled: this.walletState.web3Enabled,
            networkPermitted: !1,
            hasDetectedNetwork: !0
          }).metamaskUnlocked = this.isUnlocked(), e.networkPermitted = this.isOnPermittedNetwork(), 
          e.network = this.getCurrentNetwork(), [ 2 /*return*/ , e ];
        });
      });
    }, Web3Connector.prototype.componentDidLoad = function() {
      return v(this, void 0, void 0, function() {
        var e, t, n, o, r, i, a = this;
        return __generator(this, function(s) {
          switch (s.label) {
           case 0:
            return this.isWeb3Detected() ? (this.accountState.updateAccount({
              user: Object.assign({}, this.accountState.user, {
                ethAddress: this.getCurrentAddress()
              })
            }), t = (e = this.walletState).updateWalletConnection, o = (n = Object).assign, 
            r = [ {} ], [ 4 /*yield*/ , this.getCurrentWalletState() ]) : [ 2 /*return*/ , this.walletState.updateWalletConnection({
              web3Detected: !1,
              hasDetectedNetwork: !0
            }) ];

           case 1:
            return t.apply(e, [ o.apply(n, r.concat([ s.sent(), {
              provider: this.getProvider(),
              signer: this.getProvider().getSigner(),
              web3Enabled: !0,
              web3Detected: !0
            } ])) ]), i = window.setInterval(function() {
              return v(a, void 0, void 0, function() {
                var e, t, n, o, r, a, s;
                return __generator(this, function(c) {
                  switch (c.label) {
                   case 0:
                    return e = this.accountState.user.ethAddress, t = this.getCurrentAddress(), [ 4 /*yield*/ , this.accountState.updateAccount({
                      user: Object.assign({}, this.accountState.user, {
                        ethAddress: t
                      })
                    }) ];

                   case 1:
                    return c.sent(), o = (n = this.walletState).updateWalletConnection, r = {}, [ 4 /*yield*/ , this.getETHBalance() ];

                   case 2:
                    return [ 4 /*yield*/ , o.apply(n, [ (r.ethWeb3WalletBalance = c.sent(), r) ]) ];

                   case 3:
                    return c.sent(), t === e ? [ 3 /*break*/ , 5 ] : (s = (a = this.walletState).updateWalletConnection, 
                    [ 4 /*yield*/ , this.getCurrentWalletState() ]);

                   case 4:
                    s.apply(a, [ c.sent() ]), void 0 !== (e = t) && void 0 === t && clearInterval(i), 
                    c.label = 5;

                   case 5:
                    return [ 2 /*return*/ ];
                  }
                });
              });
            }, 1e3), [ 2 /*return*/ ];
          }
        });
      });
    }, Object.defineProperty(Web3Connector, "is", {
      get: function() {
        return "webthree-connector";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(Web3Connector, "encapsulation", {
      get: function() {
        return "shadow";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(Web3Connector, "properties", {
      get: function() {
        return {
          accountState: {
            type: "Any",
            attr: "account-state"
          },
          walletState: {
            type: "Any",
            attr: "wallet-state"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Web3Connector;
  }(), v = function(e, t, n, o) {
    return new (n || (n = Promise))(function(r, i) {
      function fulfilled(e) {
        try {
          step(o.next(e));
        } catch (e) {
          i(e);
        }
      }
      function rejected(e) {
        try {
          step(o.throw(e));
        } catch (e) {
          i(e);
        }
      }
      function step(e) {
        e.done ? r(e.value) : new n(function(t) {
          t(e.value);
        }).then(fulfilled, rejected);
      }
      step((o = o.apply(e, t || [])).next());
    });
  }, b = /** @class */ function() {
    function Route() {
      this.group = null, this.match = null, this.componentProps = {}, this.exact = !1, 
      this.scrollOnNextRender = !1, this.previousMatch = null;
    }
    return Route.prototype.computeMatch = function(e) {
      var t = null != this.group || null != this.el.parentElement && "stencil-route-switch" === this.el.parentElement.tagName.toLowerCase();
      if (e && !t) return this.previousMatch = this.match, this.match = s.matchPath(e.pathname, {
        path: this.url,
        exact: this.exact,
        strict: !0
      });
    }, Route.prototype.loadCompleted = function() {
      return v(this, void 0, void 0, function() {
        var e;
        return __generator(this, function(t) {
          return e = {}, this.history && this.history.location.hash ? e = {
            scrollToId: this.history.location.hash.substr(1)
          } : this.scrollTopOffset && (e = {
            scrollTopOffset: this.scrollTopOffset
          }), "function" == typeof this.componentUpdated ? this.componentUpdated(e) : this.match && !s.matchesAreEqual(this.match, this.previousMatch) && this.routeViewsUpdated && this.routeViewsUpdated(e), 
          [ 2 /*return*/ ];
        });
      });
    }, Route.prototype.componentDidUpdate = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          switch (e.label) {
           case 0:
            return [ 4 /*yield*/ , this.loadCompleted() ];

           case 1:
            return e.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, Route.prototype.componentDidLoad = function() {
      return v(this, void 0, void 0, function() {
        return __generator(this, function(e) {
          switch (e.label) {
           case 0:
            return [ 4 /*yield*/ , this.loadCompleted() ];

           case 1:
            return e.sent(), [ 2 /*return*/ ];
          }
        });
      });
    }, Route.prototype.render = function() {
      if (!this.match || !this.history) return null;
      var e = Object.assign({}, this.componentProps, {
        history: this.history,
        match: this.match
      });
      return this.routeRender ? this.routeRender(Object.assign({}, e, {
        component: this.component
      })) : this.component ? u(this.component, Object.assign({}, e)) : void 0;
    }, Object.defineProperty(Route, "is", {
      get: function() {
        return "stencil-route";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(Route, "properties", {
      get: function() {
        return {
          component: {
            type: String,
            attr: "component"
          },
          componentProps: {
            type: "Any",
            attr: "component-props"
          },
          componentUpdated: {
            type: "Any",
            attr: "component-updated"
          },
          el: {
            elementRef: !0
          },
          exact: {
            type: Boolean,
            attr: "exact"
          },
          group: {
            type: String,
            attr: "group",
            reflectToAttr: !0
          },
          history: {
            type: "Any",
            attr: "history"
          },
          historyType: {
            type: String,
            attr: "history-type"
          },
          location: {
            type: "Any",
            attr: "location",
            watchCallbacks: [ "computeMatch" ]
          },
          match: {
            type: "Any",
            attr: "match",
            mutable: !0
          },
          routeRender: {
            type: "Any",
            attr: "route-render"
          },
          routeViewsUpdated: {
            type: "Any",
            attr: "route-views-updated"
          },
          scrollTopOffset: {
            type: Number,
            attr: "scroll-top-offset"
          },
          url: {
            type: String,
            attr: "url"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(Route, "style", {
      get: function() {
        return "/**style-placeholder:stencil-route:**/";
      },
      enumerable: !0,
      configurable: !0
    }), Route;
  }();
  c.ActiveRouter.injectProps(b, [ "location", "history", "historyType", "routeViewsUpdated" ]);
  function isHTMLStencilRouteElement(e) {
    return "stencil-route" === e.tagName.toLowerCase();
  }
  var m = /** @class */ function() {
    function RouteSwitch() {
      this.group = window.crypto ? ([ 1e7 ].toString() + -1e3.toString() + -4e3.toString() + -8e3.toString() + -1e11.toString()).replace(/[018]/g, function(e) {
        return (e ^ window.crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> e / 4).toString(16);
      }) : ((1e17 * Math.random()).toString().match(/.{4}/g) || []).join("-"), this.subscribers = [];
    }
    return RouteSwitch.prototype.componentWillLoad = function() {
      null != this.location && this.regenerateSubscribers(this.location);
    }, RouteSwitch.prototype.regenerateSubscribers = function(e) {
      return t = this, n = void 0, r = function() {
        var t, n, o = this;
        return __generator(this, function(r) {
          return null == e ? [ 2 /*return*/ ] : (t = -1, this.subscribers = Array.prototype.slice.call(this.el.children).filter(isHTMLStencilRouteElement).map(function(n, o) {
            var r = s.matchPath(e.pathname, {
              path: n.url,
              exact: n.exact,
              strict: !0
            });
            return r && -1 === t && (t = o), {
              el: n,
              match: r
            };
          }), -1 === t ? [ 2 /*return*/ ] : this.activeIndex === t ? (this.subscribers[t].el.match = this.subscribers[t].match, 
          [ 2 /*return*/ ]) : (this.activeIndex = t, n = this.subscribers[this.activeIndex], 
          this.scrollTopOffset && (n.el.scrollTopOffset = this.scrollTopOffset), n.el.group = this.group, 
          n.el.match = n.match, n.el.componentUpdated = function(e) {
            o.queue.write(function() {
              o.subscribers.forEach(function(e, t) {
                if (e.el.componentUpdated = void 0, t === o.activeIndex) return e.el.style.display = "";
                o.scrollTopOffset && (e.el.scrollTopOffset = o.scrollTopOffset), e.el.group = o.group, 
                e.el.match = null, e.el.style.display = "none";
              });
            }), o.routeViewsUpdated && o.routeViewsUpdated(Object.assign({
              scrollTopOffset: o.scrollTopOffset
            }, e));
          }, [ 2 /*return*/ ]));
        });
      }, new ((o = void 0) || (o = Promise))(function(e, i) {
        function fulfilled(e) {
          try {
            step(r.next(e));
          } catch (e) {
            i(e);
          }
        }
        function rejected(e) {
          try {
            step(r.throw(e));
          } catch (e) {
            i(e);
          }
        }
        function step(t) {
          t.done ? e(t.value) : new o(function(e) {
            e(t.value);
          }).then(fulfilled, rejected);
        }
        step((r = r.apply(t, n || [])).next());
      });
      var t, n, o, r;
    }, RouteSwitch.prototype.render = function() {
      return u("slot", null);
    }, Object.defineProperty(RouteSwitch, "is", {
      get: function() {
        return "stencil-route-switch";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(RouteSwitch, "properties", {
      get: function() {
        return {
          el: {
            elementRef: !0
          },
          group: {
            type: String,
            attr: "group",
            reflectToAttr: !0
          },
          location: {
            type: "Any",
            attr: "location",
            watchCallbacks: [ "regenerateSubscribers" ]
          },
          queue: {
            context: "queue"
          },
          routeViewsUpdated: {
            type: "Any",
            attr: "route-views-updated"
          },
          scrollTopOffset: {
            type: Number,
            attr: "scroll-top-offset"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), RouteSwitch;
  }();
  function invariant(e) {
    for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
    e || console.error.apply(console, t);
  }
  function warning(e) {
    for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
    e || console.warn.apply(console, t);
  }
  c.ActiveRouter.injectProps(m, [ "location", "routeViewsUpdated" ]);
  var S = function() {
    var e, t = [];
    return {
      setPrompt: function(t) {
        return warning(null == e, "A history supports only one prompt at a time"), e = t, 
        function() {
          e === t && (e = null);
        };
      },
      confirmTransitionTo: function(t, n, o, r) {
        if (null != e) {
          var i = "function" == typeof e ? e(t, n) : e;
          "string" == typeof i ? "function" == typeof o ? o(i, r) : (warning(!1, "A history needs a getUserConfirmation function in order to use a prompt message"), 
          r(!0)) : r(!1 !== i);
        } else r(!0);
      },
      appendListener: function(e) {
        var n = !0, o = function() {
          for (var t = [], o = 0; o < arguments.length; o++) t[o] = arguments[o];
          n && e.apply(void 0, t);
        };
        return t.push(o), function() {
          n = !1, t = t.filter(function(e) {
            return e !== o;
          });
        };
      },
      notifyListeners: function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        t.forEach(function(t) {
          return t.apply(void 0, e);
        });
      }
    };
  }, A = function(e) {
    void 0 === e && (e = "scrollPositions");
    var t = new Map();
    if (s.storageAvailable("sessionStorage")) {
      var n = window.sessionStorage.getItem(e);
      t = n ? new Map(JSON.parse(n)) : t;
    }
    function set(e, n) {
      if (t.set(e, n), s.storageAvailable("sessionStorage")) {
        var o = [];
        t.forEach(function(e, t) {
          o.push([ t, e ]);
        }), window.sessionStorage.setItem("scrollPositions", JSON.stringify(o));
      }
    }
    return "scrollRestoration" in history && (history.scrollRestoration = "manual"), 
    {
      set: set,
      get: function(e) {
        return t.get(e);
      },
      has: function(e) {
        return t.has(e);
      },
      capture: function(e) {
        set(e, [ window.scrollX, window.scrollY ]);
      }
    };
  }, P = function() {
    try {
      return window.history.state || {};
    } catch (e) {
      return {};
    }
  }, k = {
    hashbang: {
      encodePath: function(e) {
        return "!" === e.charAt(0) ? e : "!/" + s.stripLeadingSlash(e);
      },
      decodePath: function(e) {
        return "!" === e.charAt(0) ? e.substr(1) : e;
      }
    },
    noslash: {
      encodePath: s.stripLeadingSlash,
      decodePath: s.addLeadingSlash
    },
    slash: {
      encodePath: s.addLeadingSlash,
      decodePath: s.addLeadingSlash
    }
  }, R = function() {
    var e = window.location.href, t = e.indexOf("#");
    return -1 === t ? "" : e.substring(t + 1);
  }, C = function(e) {
    var t = window.location.href.indexOf("#");
    window.location.replace(window.location.href.slice(0, t >= 0 ? t : 0) + "#" + e);
  };
  function getLocation(e, t) {
    var n = 0 == e.pathname.indexOf(t) ? "/" + e.pathname.slice(t.length) : e.pathname;
    return Object.assign({}, e, {
      pathname: n
    });
  }
  var O = {
    browser: function(e) {
      void 0 === e && (e = {}), invariant(s.canUseDOM, "Browser history needs a DOM");
      var t = window.history, n = s.supportsHistory(), o = !s.supportsPopStateOnHashChange(), r = A(), i = null != e.forceRefresh && e.forceRefresh, a = null != e.getUserConfirmation ? e.getUserConfirmation : s.getConfirmation, c = null != e.keyLength ? e.keyLength : 6, u = e.basename ? s.stripTrailingSlash(s.addLeadingSlash(e.basename)) : "", l = function(e) {
        var t = (e = e || {}).key, n = e.state, o = window.location, r = o.pathname + o.search + o.hash;
        return warning(!u || s.hasBasename(r, u), 'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "' + r + '" to begin with "' + u + '".'), 
        u && (r = s.stripBasename(r, u)), s.createLocation(r, n, t || s.createKey(c));
      }, h = S(), p = function(e) {
        r.capture(T.location.key), Object.assign(T, e), T.location.scrollPosition = r.get(T.location.key), 
        T.length = t.length, h.notifyListeners(T.location, T.action);
      }, d = function(e) {
        s.isExtraneousPopstateEvent(e) || y(l(e.state));
      }, f = function() {
        y(l(P()));
      }, g = !1, y = function(e) {
        g ? (g = !1, p()) : h.confirmTransitionTo(e, "POP", a, function(t) {
          t ? p({
            action: "POP",
            location: e
          }) : w(e);
        });
      }, w = function(e) {
        var t = b.indexOf(T.location.key);
        -1 === t && (t = 0);
        var n = b.indexOf(e.key);
        -1 === n && (n = 0);
        var o = t - n;
        o && (g = !0, k(o));
      }, v = l(P()), b = [ v.key ], m = function(e) {
        return u + s.createPath(e);
      }, k = function(e) {
        t.go(e);
      }, R = 0, C = function(e) {
        1 === (R += e) ? (s.addEventListener(window, "popstate", d), o && s.addEventListener(window, "hashchange", f)) : 0 === R && (s.removeEventListener(window, "popstate", d), 
        o && s.removeEventListener(window, "hashchange", f));
      }, O = !1, T = {
        length: t.length,
        action: "POP",
        location: v,
        createHref: m,
        push: function(e, o) {
          warning(!("object" == typeof e && void 0 !== e.state && void 0 !== o), "You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");
          var r = s.createLocation(e, o, s.createKey(c), T.location);
          h.confirmTransitionTo(r, "PUSH", a, function(e) {
            if (e) {
              var o = m(r), a = r.state;
              if (n) if (t.pushState({
                key: r.key,
                state: a
              }, void 0, o), i) window.location.href = o; else {
                var s = b.indexOf(T.location.key), c = b.slice(0, -1 === s ? 0 : s + 1);
                c.push(r.key), b = c, p({
                  action: "PUSH",
                  location: r
                });
              } else warning(void 0 === a, "Browser history cannot push state in browsers that do not support HTML5 history"), 
              window.location.href = o;
            }
          });
        },
        replace: function(e, o) {
          warning(!("object" == typeof e && void 0 !== e.state && void 0 !== o), "You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");
          var r = s.createLocation(e, o, s.createKey(c), T.location);
          h.confirmTransitionTo(r, "REPLACE", a, function(e) {
            if (e) {
              var o = m(r), a = r.state;
              if (n) if (t.replaceState({
                key: r.key,
                state: a
              }, void 0, o), i) window.location.replace(o); else {
                var s = b.indexOf(T.location.key);
                -1 !== s && (b[s] = r.key), p({
                  action: "REPLACE",
                  location: r
                });
              } else warning(void 0 === a, "Browser history cannot replace state in browsers that do not support HTML5 history"), 
              window.location.replace(o);
            }
          });
        },
        go: k,
        goBack: function() {
          return k(-1);
        },
        goForward: function() {
          return k(1);
        },
        block: function(e) {
          void 0 === e && (e = "");
          var t = h.setPrompt(e);
          return O || (C(1), O = !0), function() {
            return O && (O = !1, C(-1)), t();
          };
        },
        listen: function(e) {
          var t = h.appendListener(e);
          return C(1), function() {
            C(-1), t();
          };
        }
      };
      return T;
    },
    hash: function(e) {
      void 0 === e && (e = {}), invariant(s.canUseDOM, "Hash history needs a DOM");
      var t = window.history, n = s.supportsGoWithoutReloadUsingHash(), o = null != e.keyLength ? e.keyLength : 6, r = e.getUserConfirmation, i = void 0 === r ? s.getConfirmation : r, a = e.hashType, c = void 0 === a ? "slash" : a, u = e.basename ? s.stripTrailingSlash(s.addLeadingSlash(e.basename)) : "", l = k[c], h = l.encodePath, p = l.decodePath, d = function() {
        var e = p(R());
        return warning(!u || s.hasBasename(e, u), 'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "' + e + '" to begin with "' + u + '".'), 
        u && (e = s.stripBasename(e, u)), s.createLocation(e, void 0, s.createKey(o));
      }, f = S(), g = function(e) {
        Object.assign(E, e), E.length = t.length, f.notifyListeners(E.location, E.action);
      }, y = !1, w = null, v = function() {
        var e = R(), t = h(e);
        if (e !== t) C(t); else {
          var n = d();
          if (!y && s.locationsAreEqual(E.location, n)) return;
          if (w === s.createPath(n)) return;
          w = null, b(n);
        }
      }, b = function(e) {
        y ? (y = !1, g()) : f.confirmTransitionTo(e, "POP", i, function(t) {
          t ? g({
            action: "POP",
            location: e
          }) : m(e);
        });
      }, m = function(e) {
        var t = T.lastIndexOf(s.createPath(E.location));
        -1 === t && (t = 0);
        var n = T.lastIndexOf(s.createPath(e));
        -1 === n && (n = 0);
        var o = t - n;
        o && (y = !0, _(o));
      }, A = R(), P = h(A);
      A !== P && C(P);
      var O = d(), T = [ s.createPath(O) ], _ = function(e) {
        warning(n, "Hash history go(n) causes a full page reload in this browser"), t.go(e);
      }, L = 0, x = function(e) {
        1 === (L += e) ? s.addEventListener(window, "hashchange", v) : 0 === L && s.removeEventListener(window, "hashchange", v);
      }, W = !1, E = {
        length: t.length,
        action: "POP",
        location: O,
        createHref: function(e) {
          return "#" + h(u + s.createPath(e));
        },
        push: function(e, t) {
          warning(void 0 === t, "Hash history cannot push state; it is ignored");
          var n = s.createLocation(e, void 0, s.createKey(o), E.location);
          f.confirmTransitionTo(n, "PUSH", i, function(e) {
            if (e) {
              var t = s.createPath(n), o = h(u + t);
              if (R() !== o) {
                w = t, window.location.hash = o;
                var r = T.lastIndexOf(s.createPath(E.location)), i = T.slice(0, -1 === r ? 0 : r + 1);
                i.push(t), T = i, g({
                  action: "PUSH",
                  location: n
                });
              } else warning(!1, "Hash history cannot PUSH the same path; a new entry will not be added to the history stack"), 
              g();
            }
          });
        },
        replace: function(e, t) {
          warning(void 0 === t, "Hash history cannot replace state; it is ignored");
          var n = s.createLocation(e, void 0, s.createKey(o), E.location);
          f.confirmTransitionTo(n, "REPLACE", i, function(e) {
            if (e) {
              var t = s.createPath(n), o = h(u + t);
              R() !== o && (w = t, C(o));
              var r = T.indexOf(s.createPath(E.location));
              -1 !== r && (T[r] = t), g({
                action: "REPLACE",
                location: n
              });
            }
          });
        },
        go: _,
        goBack: function() {
          return _(-1);
        },
        goForward: function() {
          return _(1);
        },
        block: function(e) {
          void 0 === e && (e = "");
          var t = f.setPrompt(e);
          return W || (x(1), W = !0), function() {
            return W && (W = !1, x(-1)), t();
          };
        },
        listen: function(e) {
          var t = f.appendListener(e);
          return x(1), function() {
            x(-1), t();
          };
        }
      };
      return E;
    }
  }, T = /** @class */ function() {
    function Router() {
      var e = this;
      this.root = "/", this.historyType = "browser", this.titleSuffix = "", this.routeViewsUpdated = function(t) {
        if (void 0 === t && (t = {}), t.scrollToId && "browser" === e.historyType) {
          var n = document.getElementById(t.scrollToId);
          if (n) return n.scrollIntoView();
        }
        e.scrollTo(t.scrollTopOffset || e.scrollTopOffset);
      };
    }
    return Router.prototype.componentWillLoad = function() {
      var e = this;
      this.history = O[this.historyType](), this.history.listen(function(t) {
        return n = e, o = void 0, i = function() {
          return __generator(this, function(e) {
            return t = getLocation(t, this.root), this.location = t, [ 2 /*return*/ ];
          });
        }, new ((r = void 0) || (r = Promise))(function(e, t) {
          function fulfilled(e) {
            try {
              step(i.next(e));
            } catch (e) {
              t(e);
            }
          }
          function rejected(e) {
            try {
              step(i.throw(e));
            } catch (e) {
              t(e);
            }
          }
          function step(t) {
            t.done ? e(t.value) : new r(function(e) {
              e(t.value);
            }).then(fulfilled, rejected);
          }
          step((i = i.apply(n, o || [])).next());
        });
        var n, o, r, i;
      }), this.location = getLocation(this.history.location, this.root);
    }, Router.prototype.scrollTo = function(e) {
      var t = this;
      if (null != e && !this.isServer && this.history) return "POP" === this.history.action && Array.isArray(this.history.location.scrollPosition) ? this.queue.write(function() {
        t.history && t.history.location && Array.isArray(t.history.location.scrollPosition) && window.scrollTo(t.history.location.scrollPosition[0], t.history.location.scrollPosition[1]);
      }) : this.queue.write(function() {
        window.scrollTo(0, e);
      });
    }, Router.prototype.render = function() {
      if (this.location && this.history) return u(c.ActiveRouter.Provider, {
        state: {
          historyType: this.historyType,
          location: this.location,
          titleSuffix: this.titleSuffix,
          root: this.root,
          history: this.history,
          routeViewsUpdated: this.routeViewsUpdated
        }
      }, u("slot", null));
    }, Object.defineProperty(Router, "is", {
      get: function() {
        return "stencil-router";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(Router, "properties", {
      get: function() {
        return {
          history: {
            state: !0
          },
          historyType: {
            type: String,
            attr: "history-type"
          },
          isServer: {
            context: "isServer"
          },
          location: {
            state: !0
          },
          queue: {
            context: "queue"
          },
          root: {
            type: String,
            attr: "root"
          },
          scrollTopOffset: {
            type: Number,
            attr: "scroll-top-offset"
          },
          titleSuffix: {
            type: String,
            attr: "title-suffix"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Router;
  }();
  e.AppHome = l, e.AppRoot = g, e.WebthreeConnector = w, e.StencilRoute = b, e.StencilRouteSwitch = m, 
  e.StencilRouter = T, Object.defineProperty(e, "__esModule", {
    value: !0
  });
});