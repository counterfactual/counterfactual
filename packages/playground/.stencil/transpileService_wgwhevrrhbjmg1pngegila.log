{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/widgets/widget-dev-flags/widget-dev-flags.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"widget-dialog"},{"tag":"widget-tooltip"}],"cmpMeta":{"tagNameMeta":"widget-dev-flags","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/widgets/widget-dev-flags/widget-dev-flags.scss","cmpRelativePath":"widget-dev-flags.scss","originalComponentPath":"widget-dev-flags.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"WidgetDevFlags","tags":[],"documentation":"","type":"typeof WidgetDevFlags"},"encapsulationMeta":1,"componentClass":"WidgetDevFlags","membersMeta":{"showingModal":{"memberType":16}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/widgets/widget-dev-flags/widget-dev-flags.js"},"jsText":"export class WidgetDevFlags {\r\n    constructor() {\r\n        this.showingModal = false;\r\n    }\r\n    get matchmakeWith() {\r\n        return localStorage.getItem(\"playground:matchmakeWith\");\r\n    }\r\n    get hasAnyFlags() {\r\n        return this.matchmakeWith;\r\n    }\r\n    showModal() {\r\n        this.showingModal = true;\r\n    }\r\n    hideModal() {\r\n        this.showingModal = false;\r\n    }\r\n    unset(key, event) {\r\n        event.preventDefault();\r\n        localStorage.removeItem(key);\r\n        const target = event.target;\r\n        target.outerHTML = \"Cleared!\";\r\n    }\r\n    buildFlagRow(key, propName) {\r\n        return (h(\"tr\", null,\r\n            h(\"td\", null, key),\r\n            h(\"td\", null, this[propName]),\r\n            h(\"td\", null,\r\n                h(\"a\", { href: \"#\", onClick: e => this.unset(key, e) }, \"Unset\"))));\r\n    }\r\n    get dialog() {\r\n        const rows = [];\r\n        if (this.matchmakeWith) {\r\n            rows.push(this.buildFlagRow(\"playground:matchmakeWith\", \"matchmakeWith\"));\r\n        }\r\n        const content = (h(\"table\", { cellSpacing: 0, cellPadding: 0 },\r\n            h(\"tr\", null,\r\n                h(\"th\", null, \"Flag\"),\r\n                h(\"th\", null, \"Value\"),\r\n                h(\"th\", null)),\r\n            rows));\r\n        return (h(\"widget-dialog\", { dialogTitle: \"Using dev flags\", content: content, dialogClass: \"dialog--dev-flags\", contentClass: \"dialog-content--dev-flags\", visible: this.showingModal, primaryButtonText: \"Close\", onPrimaryButtonClicked: this.hideModal.bind(this) }));\r\n    }\r\n    render() {\r\n        return this.hasAnyFlags ? ([\r\n            h(\"widget-tooltip\", { onClick: this.showModal.bind(this), message: \"Click here for full details\" }, \"\\u26A0\\uFE0F Using dev flags\"),\r\n            this.dialog\r\n        ]) : (h(\"div\", null));\r\n    }\r\n    static get is() { return \"widget-dev-flags\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"showingModal\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:widget-dev-flags:**/\"; }\r\n}\r\n"}