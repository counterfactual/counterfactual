import * as tslib_1 from "../polyfills/tslib.js";

import { h } from "../app.core.js";

import "./chunk-deed3e85.js";

import { a as AccountTunnel } from "./chunk-dfef6d51.js";

import { a as AppRegistryTunnel } from "./chunk-868ccbc3.js";

import { a as CounterfactualNode } from "./chunk-515d15f9.js";

import { a as WalletTunnel } from "./chunk-a343ce23.js";

import { a as PlaygroundAPIClient } from "./chunk-adf5a5b1.js";

var DialogInsufficientFunds = /** @class */ function() {
  function DialogInsufficientFunds() {
    this.onDeposit = function() {}, this.onReject = function() {};
  }
  return DialogInsufficientFunds.prototype.render = function() {
    var e = this;
    return h("widget-dialog", {
      visible: !0,
      dialogTitle: "Insufficient funds",
      content: h("label", null, "You need at least", " ", window.ethers.utils.formatEther(this.message.minimumEthBalance), " ", "ETH to ETH in your Playground account to install this game."),
      primaryButtonText: "Deposit",
      onPrimaryButtonClicked: function() {
        return e.onDeposit();
      },
      secondaryButtonText: "Reject",
      onSecondaryButtonClicked: function() {
        return e.onReject();
      }
    });
  }, Object.defineProperty(DialogInsufficientFunds, "is", {
    get: function() {
      return "dialog-insufficient-funds";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(DialogInsufficientFunds, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(DialogInsufficientFunds, "properties", {
    get: function() {
      return {
        message: {
          type: "Any",
          attr: "message"
        },
        onDeposit: {
          type: "Any",
          attr: "on-deposit"
        },
        onReject: {
          type: "Any",
          attr: "on-reject"
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), DialogInsufficientFunds;
}(), KOVAN_NETWORK_ID = "42", DialogProposeInstall = /** @class */ function() {
  function DialogProposeInstall() {
    this.el = {}, this.onAccept = function() {}, this.onReject = function() {}, this.apps = [], 
    this.user = {};
  }
  return DialogProposeInstall.prototype.componentWillLoad = function() {
    return tslib_1.__awaiter(this, void 0, void 0, function() {
      var e;
      return tslib_1.__generator(this, function(t) {
        switch (t.label) {
         case 0:
          return this.message.data ? (e = this, [ 4 /*yield*/ , PlaygroundAPIClient.getUserByNodeAddress(this.message.data.proposedByIdentifier) ]) : [ 3 /*break*/ , 2 ];

         case 1:
          e.user = t.sent(), t.label = 2;

         case 2:
          return [ 2 /*return*/ ];
        }
      });
    });
  }, DialogProposeInstall.prototype.render = function() {
    var e = this, t = this.apps.find(function(t) {
      return t.id[KOVAN_NETWORK_ID] === e.message.data.params.appDefinition;
    });
    if (!t) throw Error("You've received an installation proposal from a different Ethereum network");
    return h("widget-dialog", {
      visible: !0,
      dialogTitle: "You've been invited to play!",
      content: h("label", null, "You'll need to deposit", h("br", null), h("strong", null, window.ethers.utils.formatEther(this.message.data.params.initiatorDeposit), " ", "ETH"), " ", "to play ", h("strong", null, t.name), " with", " ", h("strong", null, this.user.username), "."),
      primaryButtonText: "Accept",
      onPrimaryButtonClicked: function() {
        return e.onAccept(e.message);
      },
      secondaryButtonText: "Reject",
      onSecondaryButtonClicked: function() {
        return e.onReject();
      }
    });
  }, Object.defineProperty(DialogProposeInstall, "is", {
    get: function() {
      return "dialog-propose-install";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(DialogProposeInstall, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(DialogProposeInstall, "properties", {
    get: function() {
      return {
        apps: {
          type: "Any",
          attr: "apps"
        },
        el: {
          elementRef: !0
        },
        message: {
          type: "Any",
          attr: "message"
        },
        onAccept: {
          type: "Any",
          attr: "on-accept"
        },
        onReject: {
          type: "Any",
          attr: "on-reject"
        },
        user: {
          state: !0
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), DialogProposeInstall;
}();

AppRegistryTunnel.injectProps(DialogProposeInstall, [ "apps" ]);

var DialogRejectInstall = /** @class */ function() {
  function DialogRejectInstall() {
    this.onOKClicked = function() {}, this.onReject = function() {}, this.username = "";
  }
  return DialogRejectInstall.prototype.componentWillLoad = function() {
    var e = JSON.parse(window.localStorage.getItem("playground:lastMatchmake") || '{"attributes":{"username":"Your opponent"}}');
    this.username = e.data.attributes.username;
  }, DialogRejectInstall.prototype.render = function() {
    var e = this;
    return h("widget-dialog", {
      visible: !0,
      dialogTitle: "Sorry :(",
      content: h("label", null, h("strong", null, this.username), " has declined your invitation to play."),
      primaryButtonText: "OK",
      onPrimaryButtonClicked: function() {
        return e.onOKClicked();
      }
    });
  }, Object.defineProperty(DialogRejectInstall, "is", {
    get: function() {
      return "dialog-reject-install";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(DialogRejectInstall, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(DialogRejectInstall, "properties", {
    get: function() {
      return {
        message: {
          type: "Any",
          attr: "message"
        },
        onOKClicked: {
          type: "Any",
          attr: "on-o-k-clicked"
        },
        onReject: {
          type: "Any",
          attr: "on-reject"
        },
        username: {
          state: !0
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), DialogRejectInstall;
}(), HeaderDrawer = /** @class */ function() {
  function HeaderDrawer() {
    this.closeDrawer = {}, this.opened = !1;
  }
  return HeaderDrawer.prototype.menuClicked = function(e) {
    e.preventDefault(), this.closeDrawer.emit();
  }, HeaderDrawer.prototype.render = function() {
    var e = this;
    return h("div", {
      class: this.opened ? "drawer-container opened" : "drawer-container"
    }, h("a", {
      onClick: function(t) {
        return e.menuClicked(t);
      },
      class: "drawer-screen"
    }), h("menu", {
      class: "drawer"
    }, h("header-content", null)));
  }, Object.defineProperty(HeaderDrawer, "is", {
    get: function() {
      return "header-drawer";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(HeaderDrawer, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(HeaderDrawer, "properties", {
    get: function() {
      return {
        opened: {
          type: Boolean,
          attr: "opened"
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(HeaderDrawer, "events", {
    get: function() {
      return [ {
        name: "closeDrawer",
        method: "closeDrawer",
        bubbles: !0,
        cancelable: !0,
        composed: !0
      } ];
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(HeaderDrawer, "style", {
    get: function() {
      return "/**style-placeholder:header-drawer:**/";
    },
    enumerable: !0,
    configurable: !0
  }), HeaderDrawer;
}(), LayoutHeader = /** @class */ function() {
  function LayoutHeader() {
    this.drawerOpened = !1;
  }
  return LayoutHeader.prototype.closeDrawerHandler = function(e) {
    this.drawerOpened = !1;
  }, LayoutHeader.prototype.openDrawerHandler = function(e) {
    this.drawerOpened = !0;
  }, LayoutHeader.prototype.render = function() {
    var e = this;
    return [ h("header-drawer", {
      opened: this.drawerOpened,
      onCloseDrawer: function(t) {
        return e.closeDrawerHandler(t);
      }
    }), h("header", {
      class: "header"
    }, h("div", {
      class: "hide-on-desktop"
    }, h("div", {
      class: "mobile-content"
    }, h("a", {
      class: "drawer-toggle",
      onClick: function(t) {
        return e.openDrawerHandler(t);
      }
    }, h("img", {
      src: "/assets/icon/menu-btn.svg",
      alt: "Menu"
    })), h("div", {
      class: "logo-container"
    }, h("stencil-route-link", {
      url: "/"
    }, h("img", {
      src: "/assets/icon/logo.svg",
      alt: "Counterfactual",
      class: "logo"
    }))), h("div", {
      class: "account-container"
    }, h("header-balance", null)))), h("div", {
      class: "hide-on-mobile desktop-wrapper"
    }, h("header-content", null))) ];
  }, Object.defineProperty(LayoutHeader, "is", {
    get: function() {
      return "layout-header";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(LayoutHeader, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(LayoutHeader, "properties", {
    get: function() {
      return {
        drawerOpened: {
          state: !0
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(LayoutHeader, "style", {
    get: function() {
      return "/**style-placeholder:layout-header:**/";
    },
    enumerable: !0,
    configurable: !0
  }), LayoutHeader;
}(), KOVAN_NETWORK_ID$1 = "42", NodeListener = /** @class */ function() {
  function NodeListener() {
    this.el = {}, this.apps = [], this.web3Detected = !1, this.history = {}, this.provider = {}, 
    this.ethMultisigBalance = window.ethers.constants.Zero, this.nodeMessageResolver = {
      proposeInstallVirtualEvent: this.onProposeInstallVirtual.bind(this),
      rejectInstallEvent: this.onRejectInstall.bind(this),
      rejectInstallVirtualEvent: this.onRejectInstall.bind(this)
    };
  }
  return Object.defineProperty(NodeListener.prototype, "cfProvider", {
    get: function() {
      return CounterfactualNode.getCfProvider();
    },
    enumerable: !0,
    configurable: !0
  }), NodeListener.prototype.componentWillLoad = function() {
    return tslib_1.__awaiter(this, void 0, void 0, function() {
      return tslib_1.__generator(this, function(e) {
        return this.web3Detected && this.bindNodeEvents(), [ 2 /*return*/ ];
      });
    });
  }, NodeListener.prototype.bindNodeEvents = function() {
    var e = this;
    Object.keys(this.nodeMessageResolver).forEach(function(t) {
      e.cfProvider.off(t), e.cfProvider.on(t, e.nodeMessageResolver[t].bind(e));
    });
  }, NodeListener.prototype.onProposeInstallVirtual = function(e) {
    this.currentMessage = e, this.showModal();
  }, NodeListener.prototype.onRejectInstall = function(e) {
    this.currentMessage = e, this.showModal();
  }, NodeListener.prototype.acceptProposeInstall = function(e) {
    return tslib_1.__awaiter(this, void 0, void 0, function() {
      var t, n, r, o, i, a;
      return tslib_1.__generator(this, function(s) {
        switch (s.label) {
         case 0:
          return s.trys.push([ 0, 2, , 3 ]), t = this.ethMultisigBalance, n = window.ethers.utils.bigNumberify(e.data.params.initiatorDeposit), 
          t.lt(n) ? (this.currentModalType = "error", this.currentErrorType = "INSUFFICIENT_FUNDS", 
          this.currentMessage = {
            minimumEthBalance: n
          }, [ 2 /*return*/ ]) : [ 4 /*yield*/ , this.cfProvider.installVirtual((r = this.currentMessage.data).appInstanceId, r.intermediaries[0]) ];

         case 1:
          if (o = s.sent(), !(i = this.apps.find(function(e) {
            return e.id[KOVAN_NETWORK_ID$1] === o.appInstance.appDefinition;
          }))) throw Error("You've received an installation proposal from a different Ethereum network");
          return window.localStorage.setItem("playground:installingDapp", JSON.stringify({
            installedApp: o,
            name: i.name,
            dappContainerUrl: "/dapp/" + i.slug,
            dappUrl: i.url
          })), this.history.push("/dapp/" + i.slug), this.hideModal(), [ 3 /*break*/ , 3 ];

         case 2:
          return a = s.sent(), this.currentModalType = "error", this.currentErrorType = a.message, 
          console.error(a), [ 3 /*break*/ , 3 ];

         case 3:
          return [ 2 /*return*/ ];
        }
      });
    });
  }, NodeListener.prototype.rejectProposeInstall = function() {
    return tslib_1.__awaiter(this, void 0, void 0, function() {
      return tslib_1.__generator(this, function(e) {
        switch (e.label) {
         case 0:
          return [ 4 /*yield*/ , this.cfProvider.rejectInstall(this.currentMessage.data.appInstanceId) ];

         case 1:
          return e.sent(), this.hideModal(), [ 2 /*return*/ ];
        }
      });
    });
  }, NodeListener.prototype.showModal = function() {
    this.currentModalType = this.currentMessage.type;
  }, NodeListener.prototype.hideModal = function() {
    this.currentModalType = "none";
  }, NodeListener.prototype.render = function() {
    var e = this, t = {};
    return "proposeInstallVirtualEvent" === this.currentModalType && (t = h("dialog-propose-install", {
      message: this.currentMessage,
      onAccept: this.acceptProposeInstall.bind(this),
      onReject: this.rejectProposeInstall.bind(this)
    })), "rejectInstallVirtualEvent" !== this.currentModalType && "rejectInstallEvent" !== this.currentModalType || (t = h("dialog-reject-install", {
      message: this.currentMessage,
      onOKClicked: this.hideModal.bind(this)
    })), "error" === this.currentModalType && (t = "INSUFFICIENT_FUNDS" === this.currentErrorType ? h("dialog-insufficient-funds", {
      message: this.currentMessage,
      onDeposit: this.hideModal.bind(this),
      onReject: this.rejectProposeInstall.bind(this)
    }) : h("widget-dialog", {
      dialogTitle: "Something went wrong",
      content: this.currentErrorType + ". See the console for more info.",
      primaryButtonText: "OK",
      onPrimaryButtonClicked: function() {
        return e.hideModal();
      }
    })), [ h("slot", null), t ];
  }, Object.defineProperty(NodeListener, "is", {
    get: function() {
      return "node-listener";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(NodeListener, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(NodeListener, "properties", {
    get: function() {
      return {
        apps: {
          type: "Any",
          attr: "apps"
        },
        currentErrorType: {
          state: !0
        },
        currentMessage: {
          state: !0
        },
        currentModalType: {
          state: !0
        },
        el: {
          elementRef: !0
        },
        ethMultisigBalance: {
          type: "Any",
          attr: "eth-multisig-balance"
        },
        history: {
          type: "Any",
          attr: "history"
        },
        provider: {
          type: "Any",
          attr: "provider"
        },
        web3Detected: {
          type: Boolean,
          attr: "web-3-detected"
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), NodeListener;
}();

AppRegistryTunnel.injectProps(NodeListener, [ "apps" ]), AccountTunnel.injectProps(NodeListener, [ "ethMultisigBalance" ]), 
WalletTunnel.injectProps(NodeListener, [ "web3Detected", "provider" ]);

export { DialogInsufficientFunds, DialogProposeInstall, DialogRejectInstall, HeaderDrawer, LayoutHeader, NodeListener };