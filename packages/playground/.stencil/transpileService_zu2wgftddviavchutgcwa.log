{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-exchange/account-exchange.tsx","localImports":["/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/account","/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/wallet"],"externalImports":["@stencil/core","@stencil/router","ethers/utils"],"potentialCmpRefs":[{"tag":"layout-header"},{"tag":"account-eth-form"}],"cmpMeta":{"tagNameMeta":"account-exchange","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-exchange/account-exchange.scss","cmpRelativePath":"account-exchange.scss","originalComponentPath":"account-exchange.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AccountExchange","tags":[],"documentation":"","type":"typeof AccountExchange"},"encapsulationMeta":1,"componentClass":"AccountExchange","membersMeta":{"el":{"memberType":64},"depositError":{"memberType":16},"withdrawalError":{"memberType":16},"isDepositPending":{"memberType":16},"isWithdrawalPending":{"memberType":16},"user":{"memberType":1,"attribName":"user","attribType":{"text":"UserSession","required":false,"optional":false,"typeReferences":{"UserSession":{"referenceLocation":"import","importReferenceLocation":"../../../types"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"user","tags":[],"documentation":"","type":"{ id: string; username: string; ethAddress: string; nodeAddress: string; email: string; multisigAddress: string; transactionHash: string; token?: string; }","default":"{} as UserSession"},"watchCallbacks":["onUserAcquired"]},"ethFreeBalanceWei":{"memberType":1,"attribName":"eth-free-balance-wei","attribType":{"text":"BigNumber | number","required":false,"optional":false,"typeReferences":{"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"ethFreeBalanceWei","tags":[],"documentation":"","type":"BigNumber | number","default":"0"}},"ethMultisigBalance":{"memberType":1,"attribName":"eth-multisig-balance","attribType":{"text":"BigNumber | number","required":false,"optional":false,"typeReferences":{"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"ethMultisigBalance","tags":[],"documentation":"","type":"BigNumber | number","default":"0"}},"ethWeb3WalletBalance":{"memberType":1,"attribName":"eth-web-3-wallet-balance","attribType":{"text":"BigNumber | number","required":false,"optional":false,"typeReferences":{"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"ethWeb3WalletBalance","tags":[],"documentation":"","type":"BigNumber | number","default":"0"}},"ethPendingDepositTxHash":{"memberType":1,"attribName":"eth-pending-deposit-tx-hash","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"ethPendingDepositTxHash","tags":[],"documentation":"","type":"string","default":"\"\""},"watchCallbacks":["onEthPendingDepositTxHashChanged"]},"ethPendingDepositAmountWei":{"memberType":1,"attribName":"eth-pending-deposit-amount-wei","attribType":{"text":"BigNumber | number","required":false,"optional":false,"typeReferences":{"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"ethPendingDepositAmountWei","tags":[],"documentation":"","type":"BigNumber | number","default":"0"},"watchCallbacks":["onEthPendingDepositAmountWeiChanged"]},"ethPendingWithdrawalTxHash":{"memberType":1,"attribName":"eth-pending-withdrawal-tx-hash","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"ethPendingWithdrawalTxHash","tags":[],"documentation":"","type":"string","default":"\"\""},"watchCallbacks":["onEthPendingWithdrawalTxHashChanged"]},"ethPendingWithdrawalAmountWei":{"memberType":1,"attribName":"eth-pending-withdrawal-amount-wei","attribType":{"text":"BigNumber | number","required":false,"optional":false,"typeReferences":{"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"ethPendingWithdrawalAmountWei","tags":[],"documentation":"","type":"BigNumber | number","default":"0"},"watchCallbacks":["onEthPendingWithdrawalAmountWeiChanged"]},"network":{"memberType":1,"attribName":"network","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"network","tags":[],"documentation":"","type":"string","default":"\"\""}},"updateAccount":{"memberType":1,"attribName":"update-account","attribType":{"text":"(e) => void","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"updateAccount","tags":[],"documentation":"","type":"(e: any) => void","default":"e => {}"}},"deposit":{"memberType":1,"attribName":"deposit","attribType":{"text":"(value: string) => Promise<any>","required":false,"optional":false,"typeReferences":{"Promise":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"deposit","tags":[],"documentation":"","type":"(value: string) => Promise<any>","default":"async () => ({})"}},"withdraw":{"memberType":1,"attribName":"withdraw","attribType":{"text":"(value: string) => Promise<void>","required":false,"optional":false,"typeReferences":{"Promise":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"withdraw","tags":[],"documentation":"","type":"(value: string) => Promise<void>","default":"async () => {}"}},"getBalances":{"memberType":1,"attribName":"get-balances","attribType":{"text":"() => Promise<\n    { ethMultisigBalance: BigNumber; ethFreeBalanceWei: BigNumber } | undefined\n  >","required":false,"optional":false,"typeReferences":{"Promise":{"referenceLocation":"global"},"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"getBalances","tags":[],"documentation":"","type":"() => Promise<{ ethMultisigBalance: BigNumber; ethFreeBalanceWei: BigNumber; }>","default":"async () => undefined"}},"getEtherscanAddressURL":{"memberType":1,"attribName":"get-etherscan-address-u-r-l","attribType":{"text":"(address: string) => string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"getEtherscanAddressURL","tags":[],"documentation":"","type":"(address: string) => string","default":"() => \"\""}},"getEtherscanTxURL":{"memberType":1,"attribName":"get-etherscan-tx-u-r-l","attribType":{"text":"(tx: string) => string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"getEtherscanTxURL","tags":[],"documentation":"","type":"(tx: string) => string","default":"() => \"\""}},"history":{"memberType":1,"attribName":"history","attribType":{"text":"RouterHistory","required":false,"optional":false,"typeReferences":{"RouterHistory":{"referenceLocation":"import","importReferenceLocation":"@stencil/router"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"history","tags":[],"documentation":"","type":"RouterHistory","default":"{} as RouterHistory"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-exchange/account-exchange.js"},"jsText":"import AccountTunnel from \"../../../data/account\";\r\nimport WalletTunnel from \"../../../data/wallet\";\r\nconst HUB_IS_DEPOSITING_ALERT = \"The hub is currently making a deposit in the channel. Currently, this demo does not support asyncronous deposits.\";\r\nexport class AccountExchange {\r\n    constructor() {\r\n        this.user = {};\r\n        this.ethFreeBalanceWei = 0;\r\n        this.ethMultisigBalance = 0;\r\n        this.ethWeb3WalletBalance = 0;\r\n        this.ethPendingDepositTxHash = \"\";\r\n        this.ethPendingDepositAmountWei = 0;\r\n        this.ethPendingWithdrawalTxHash = \"\";\r\n        this.ethPendingWithdrawalAmountWei = 0;\r\n        this.network = \"\";\r\n        this.updateAccount = e => { };\r\n        this.deposit = async () => ({});\r\n        this.withdraw = async () => { };\r\n        this.getBalances = async () => undefined;\r\n        this.getEtherscanAddressURL = () => \"\";\r\n        this.getEtherscanTxURL = () => \"\";\r\n        this.history = {};\r\n        this.depositError = \"\";\r\n        this.withdrawalError = \"\";\r\n        this.isDepositPending = false;\r\n        this.isWithdrawalPending = false;\r\n    }\r\n    componentDidUpdate() {\r\n        if (!this.user || !this.user.id) {\r\n            this.history.push(\"/\");\r\n            return;\r\n        }\r\n    }\r\n    removeError() {\r\n        this.updateAccount({\r\n            error: null\r\n        });\r\n    }\r\n    onEthPendingDepositTxHashChanged() {\r\n        this.updateDepositPendingState();\r\n    }\r\n    onEthPendingDepositAmountWeiChanged() {\r\n        this.updateDepositPendingState();\r\n    }\r\n    onEthPendingWithdrawalTxHashChanged() {\r\n        this.updateWithdrawalPendingState();\r\n    }\r\n    onEthPendingWithdrawalAmountWeiChanged() {\r\n        this.updateWithdrawalPendingState();\r\n    }\r\n    updateDepositPendingState() {\r\n        this.isDepositPending =\r\n            Boolean(this.ethPendingDepositTxHash) &&\r\n                Boolean(this.ethPendingDepositAmountWei);\r\n    }\r\n    updateWithdrawalPendingState() {\r\n        this.isWithdrawalPending =\r\n            Boolean(this.ethPendingWithdrawalTxHash) &&\r\n                Boolean(this.ethPendingWithdrawalAmountWei);\r\n    }\r\n    async onUserAcquired() {\r\n        if (this.user) {\r\n            await this.getBalances();\r\n        }\r\n    }\r\n    async onDepositClicked(e) {\r\n        try {\r\n            await this.deposit(window[\"ethers\"].utils.parseEther(e.target.value).toHexString());\r\n        }\r\n        catch (e) {\r\n            if (e.toString().includes(\"Cannot deposit while another deposit\")) {\r\n                window.alert(HUB_IS_DEPOSITING_ALERT);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    async onWithdrawClicked(e) {\r\n        try {\r\n            await this.withdraw(window[\"ethers\"].utils.parseEther(e.target.value).toHexString());\r\n        }\r\n        catch (e) {\r\n            if (e.toString().includes(\"Cannot withdraw while another deposit\")) {\r\n                window.alert(HUB_IS_DEPOSITING_ALERT);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    getMultisigEtherscanLink() {\r\n        return this.user.multisigAddress ? (h(\"a\", { target: \"_blank\", href: this.getEtherscanAddressURL(this.user.multisigAddress) }, \"View State Channels Wallet on Etherscan\")) : (h(\"a\", { target: \"_blank\", href: this.getEtherscanTxURL(this.user.transactionHash) }, \"View State Channels Wallet Deployment Transaction on Etherscan\"));\r\n    }\r\n    getPendingDepositEtherscanLink() {\r\n        const Zero = window[\"ethers\"].constants.Zero;\r\n        const ethPendingDepositAmountWei = this.ethPendingDepositAmountWei || Zero;\r\n        return this.isDepositPending ? (h(\"a\", { href: this.getEtherscanTxURL(this.ethPendingDepositTxHash), target: \"_blank\" },\r\n            \"\\uD83D\\uDCB0 Pending Deposit of\",\r\n            \" \",\r\n            window[\"ethers\"].utils.formatEther(ethPendingDepositAmountWei),\r\n            \" ETH\")) : null;\r\n    }\r\n    getPendingWithdrawalEtherscanLink() {\r\n        const Zero = window[\"ethers\"].constants.Zero;\r\n        const ethPendingWithdrawalAmountWei = this.ethPendingWithdrawalAmountWei || Zero;\r\n        return this.isWithdrawalPending ? (h(\"a\", { href: this.getEtherscanTxURL(this.ethPendingWithdrawalTxHash), target: \"_blank\" },\r\n            \"\\uD83D\\uDCB8 Pending Withdrawal of\",\r\n            \" \",\r\n            window[\"ethers\"].utils.formatEther(ethPendingWithdrawalAmountWei),\r\n            \"ETH\")) : null;\r\n    }\r\n    render() {\r\n        const Zero = window[\"ethers\"].constants.Zero;\r\n        const ethFreeBalanceWei = this.ethFreeBalanceWei || Zero;\r\n        return [\r\n            h(\"layout-header\", null),\r\n            h(\"div\", { class: \"form-containers\" },\r\n                h(\"div\", { class: \"form-container\" },\r\n                    h(\"h1\", null, \"Deposit ETH\"),\r\n                    h(\"account-eth-form\", { onSubmit: this.onDepositClicked.bind(this), button: this.isDepositPending ? \"Deposit in progress\" : \"Deposit\", disabled: this.isDepositPending ? true : false, loading: this.isDepositPending ? true : false, provideFaucetLink: true, error: this.depositError, available: window[\"ethers\"].utils.bigNumberify(this.ethWeb3WalletBalance), min: 0.1, max: 1 })),\r\n                h(\"div\", { class: \"form-container\" },\r\n                    h(\"h1\", null, \"Withdraw ETH\"),\r\n                    h(\"account-eth-form\", { onSubmit: this.onWithdrawClicked.bind(this), button: this.isWithdrawalPending ? \"Withdrawal in progress\" : \"Withdraw\", disabled: this.isWithdrawalPending ? true : false, loading: this.isWithdrawalPending ? true : false, error: this.withdrawalError, available: window[\"ethers\"].utils.bigNumberify(ethFreeBalanceWei), min: 0, max: Number(window[\"ethers\"].utils.formatEther(ethFreeBalanceWei)) })),\r\n                h(\"div\", { class: \"container\" },\r\n                    h(\"p\", null, this.getMultisigEtherscanLink()),\r\n                    h(\"p\", null, this.getPendingDepositEtherscanLink()),\r\n                    h(\"p\", null, this.getPendingWithdrawalEtherscanLink())))\r\n        ];\r\n    }\r\n    static get is() { return \"account-exchange\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"deposit\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"deposit\"\r\n        },\r\n        \"depositError\": {\r\n            \"state\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"ethFreeBalanceWei\": {\r\n            \"type\": Number,\r\n            \"attr\": \"eth-free-balance-wei\"\r\n        },\r\n        \"ethMultisigBalance\": {\r\n            \"type\": Number,\r\n            \"attr\": \"eth-multisig-balance\"\r\n        },\r\n        \"ethPendingDepositAmountWei\": {\r\n            \"type\": Number,\r\n            \"attr\": \"eth-pending-deposit-amount-wei\",\r\n            \"watchCallbacks\": [\"onEthPendingDepositAmountWeiChanged\"]\r\n        },\r\n        \"ethPendingDepositTxHash\": {\r\n            \"type\": String,\r\n            \"attr\": \"eth-pending-deposit-tx-hash\",\r\n            \"watchCallbacks\": [\"onEthPendingDepositTxHashChanged\"]\r\n        },\r\n        \"ethPendingWithdrawalAmountWei\": {\r\n            \"type\": Number,\r\n            \"attr\": \"eth-pending-withdrawal-amount-wei\",\r\n            \"watchCallbacks\": [\"onEthPendingWithdrawalAmountWeiChanged\"]\r\n        },\r\n        \"ethPendingWithdrawalTxHash\": {\r\n            \"type\": String,\r\n            \"attr\": \"eth-pending-withdrawal-tx-hash\",\r\n            \"watchCallbacks\": [\"onEthPendingWithdrawalTxHashChanged\"]\r\n        },\r\n        \"ethWeb3WalletBalance\": {\r\n            \"type\": Number,\r\n            \"attr\": \"eth-web-3-wallet-balance\"\r\n        },\r\n        \"getBalances\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"get-balances\"\r\n        },\r\n        \"getEtherscanAddressURL\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"get-etherscan-address-u-r-l\"\r\n        },\r\n        \"getEtherscanTxURL\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"get-etherscan-tx-u-r-l\"\r\n        },\r\n        \"history\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"history\"\r\n        },\r\n        \"isDepositPending\": {\r\n            \"state\": true\r\n        },\r\n        \"isWithdrawalPending\": {\r\n            \"state\": true\r\n        },\r\n        \"network\": {\r\n            \"type\": String,\r\n            \"attr\": \"network\"\r\n        },\r\n        \"updateAccount\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"update-account\"\r\n        },\r\n        \"user\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"user\",\r\n            \"watchCallbacks\": [\"onUserAcquired\"]\r\n        },\r\n        \"withdraw\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"withdraw\"\r\n        },\r\n        \"withdrawalError\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:account-exchange:**/\"; }\r\n}\r\nAccountTunnel.injectProps(AccountExchange, [\r\n    \"ethFreeBalanceWei\",\r\n    \"ethMultisigBalance\",\r\n    \"ethPendingDepositTxHash\",\r\n    \"ethPendingDepositAmountWei\",\r\n    \"ethPendingWithdrawalTxHash\",\r\n    \"ethPendingWithdrawalAmountWei\",\r\n    \"updateAccount\",\r\n    \"user\",\r\n    \"deposit\",\r\n    \"withdraw\",\r\n    \"getBalances\"\r\n]);\r\nWalletTunnel.injectProps(AccountExchange, [\r\n    \"network\",\r\n    \"ethWeb3WalletBalance\",\r\n    \"getEtherscanAddressURL\",\r\n    \"getEtherscanTxURL\"\r\n]);\r\n"}