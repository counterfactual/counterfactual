{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/layout/layout-header/header-content/header-content.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"widget-logo"},{"tag":"widget-connection"},{"tag":"widget-dev-flags"},{"tag":"header-account"}],"cmpMeta":{"tagNameMeta":"header-content","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/layout/layout-header/header-content/header-content.scss","cmpRelativePath":"header-content.scss","originalComponentPath":"header-content.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"HeaderContent","tags":[],"documentation":"","type":"typeof HeaderContent"},"encapsulationMeta":1,"componentClass":"HeaderContent","membersMeta":{"connected":{"memberType":16},"opened":{"memberType":1,"attribName":"opened","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"opened","tags":[],"documentation":"","type":"boolean","default":"false"}}},"eventsMeta":[{"eventMethodName":"closeDrawer","eventName":"closeDrawer","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"closeDrawer","tags":[],"documentation":"","type":"EventEmitter<any>"}}],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/layout/layout-header/header-content/header-content.js"},"jsText":"export class HeaderContent {\r\n    constructor() {\r\n        this.closeDrawer = {};\r\n        this.opened = false;\r\n        this.connected = false;\r\n    }\r\n    menuClicked(event) {\r\n        event.preventDefault();\r\n        this.closeDrawer.emit();\r\n    }\r\n    updateConnectionWidget(event) {\r\n        this.connected = event.detail.authenticated;\r\n    }\r\n    render() {\r\n        return (h(\"nav\", { class: \"header-content\" },\r\n            h(\"div\", { class: \"left\" },\r\n                h(\"div\", { class: \"top-line\" },\r\n                    h(\"widget-logo\", null),\r\n                    h(\"a\", { class: \"hide-on-desktop\", onClick: e => this.menuClicked(e) },\r\n                        h(\"img\", { src: \"/assets/icon/menu-btn.svg\", alt: \"Menu\" }))),\r\n                h(\"div\", { class: \"connection\" },\r\n                    h(\"widget-connection\", null)),\r\n                h(\"widget-dev-flags\", null)),\r\n            h(\"header-account\", { onAuthenticationChanged: e => this.updateConnectionWidget(e) })));\r\n    }\r\n    static get is() { return \"header-content\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"connected\": {\r\n            \"state\": true\r\n        },\r\n        \"opened\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"opened\"\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"closeDrawer\",\r\n            \"method\": \"closeDrawer\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:header-content:**/\"; }\r\n}\r\n"}