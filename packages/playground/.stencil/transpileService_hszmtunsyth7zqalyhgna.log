{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-eth-form/account-eth-form.tsx","localImports":[],"externalImports":["@stencil/core","ethers/utils"],"potentialCmpRefs":[{"tag":"form-container"},{"tag":"form-input"},{"tag":"form-button"}],"cmpMeta":{"tagNameMeta":"account-eth-form","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-eth-form/account-eth-form.scss","cmpRelativePath":"account-eth-form.scss","originalComponentPath":"account-eth-form.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AccountEthForm","tags":[],"documentation":"","type":"typeof AccountEthForm"},"encapsulationMeta":1,"componentClass":"AccountEthForm","membersMeta":{"header":{"memberType":1,"attribName":"header","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"header","tags":[],"documentation":"","type":"string","default":"\"\""}},"button":{"memberType":1,"attribName":"button","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"button","tags":[],"documentation":"","type":"string","default":"\"\""}},"disabled":{"memberType":1,"attribName":"disabled","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"disabled","tags":[],"documentation":"","type":"boolean","default":"false"}},"provideFaucetLink":{"memberType":1,"attribName":"provide-faucet-link","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"provideFaucetLink","tags":[],"documentation":"","type":"boolean","default":"false"}},"min":{"memberType":1,"attribName":"min","attribType":{"text":"number","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"min","tags":[],"documentation":"","type":"number","default":"0.01"}},"max":{"memberType":1,"attribName":"max","attribType":{"text":"number","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"max","tags":[],"documentation":"","type":"number","default":"1"}},"available":{"memberType":1,"attribName":"available","attribType":{"text":"BigNumber | number","required":false,"optional":false,"typeReferences":{"BigNumber":{"referenceLocation":"import","importReferenceLocation":"ethers/utils"}}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"available","tags":[],"documentation":"","type":"BigNumber | number","default":"0"}},"value":{"memberType":2,"attribName":"value","attribType":{"text":"string | number","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":1,"jsdoc":{"name":"value","tags":[],"documentation":"","type":"number | string","default":"\"\""}},"error":{"memberType":2,"attribName":"error","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"error","tags":[],"documentation":"","type":"string","default":"\"\""}},"loading":{"memberType":1,"attribName":"loading","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"loading","tags":[],"documentation":"","type":"boolean","default":"false"}},"autofocus":{"memberType":1,"attribName":"autofocus","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"autofocus","tags":[],"documentation":"","type":"boolean","default":"false"}}},"eventsMeta":[{"eventMethodName":"submit","eventName":"submit","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"submit","tags":[],"documentation":"","type":"EventEmitter<any>"}}],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-eth-form/account-eth-form.js"},"jsText":"export class AccountEthForm {\r\n    constructor() {\r\n        this.submit = {};\r\n        this.header = \"\";\r\n        this.button = \"\";\r\n        this.disabled = false;\r\n        this.provideFaucetLink = false;\r\n        this.min = 0.01;\r\n        this.max = 1;\r\n        this.available = 0;\r\n        this.value = \"\";\r\n        this.error = \"\";\r\n        this.loading = false;\r\n        this.autofocus = false;\r\n    }\r\n    update(event) {\r\n        this.error = \"\";\r\n        this.value = event.target.value;\r\n    }\r\n    openFaucet() {\r\n        window.open(\"https://faucet.kovan.network/\", \"_blank\");\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const value = Number(this.value);\r\n        if (!value || value < this.min || value > this.max) {\r\n            this.error = `Enter an amount larger than ${this.min} and smaller than ${this.max}.`;\r\n            return;\r\n        }\r\n        this.submit.emit(event);\r\n    }\r\n    render() {\r\n        let formattedEth;\r\n        try {\r\n            formattedEth = parseFloat(window[\"ethers\"].utils.formatEther(this.available)).toFixed(4);\r\n        }\r\n        catch (_a) {\r\n            formattedEth = \"0\";\r\n        }\r\n        return (h(\"div\", null,\r\n            h(\"form-container\", null,\r\n                h(\"form-input\", { type: \"number\", unit: \"ETH\", value: this.value, error: this.error, disabled: this.disabled, min: this.min, max: Math.min(parseInt(formattedEth, 10), this.max), step: 0.001, onChange: e => this.update(e), autofocus: this.autofocus },\r\n                    h(\"div\", { class: \"balance-label\", slot: \"label\" },\r\n                        h(\"div\", null, \"Available Balance\"),\r\n                        h(\"div\", null,\r\n                            formattedEth,\r\n                            \" ETH\"))),\r\n                h(\"form-button\", { class: \"button\", spinner: this.loading, disabled: this.disabled, onButtonPressed: this.handleSubmit.bind(this) }, this.button),\r\n                this.provideFaucetLink ? (h(\"form-button\", { class: \"button button--secondary\", onButtonPressed: this.openFaucet.bind(this) }, \"Get Free ETH (test faucet)\")) : (undefined))));\r\n    }\r\n    static get is() { return \"account-eth-form\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"autofocus\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"autofocus\"\r\n        },\r\n        \"available\": {\r\n            \"type\": Number,\r\n            \"attr\": \"available\"\r\n        },\r\n        \"button\": {\r\n            \"type\": String,\r\n            \"attr\": \"button\"\r\n        },\r\n        \"disabled\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"disabled\"\r\n        },\r\n        \"error\": {\r\n            \"type\": String,\r\n            \"attr\": \"error\",\r\n            \"mutable\": true\r\n        },\r\n        \"header\": {\r\n            \"type\": String,\r\n            \"attr\": \"header\"\r\n        },\r\n        \"loading\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"loading\"\r\n        },\r\n        \"max\": {\r\n            \"type\": Number,\r\n            \"attr\": \"max\"\r\n        },\r\n        \"min\": {\r\n            \"type\": Number,\r\n            \"attr\": \"min\"\r\n        },\r\n        \"provideFaucetLink\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"provide-faucet-link\"\r\n        },\r\n        \"value\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"value\",\r\n            \"mutable\": true\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"submit\",\r\n            \"method\": \"submit\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:account-eth-form:**/\"; }\r\n}\r\n"}