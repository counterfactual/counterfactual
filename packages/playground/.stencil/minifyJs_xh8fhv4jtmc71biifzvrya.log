App.loadBundle("/**:bundle-id:**/", [ "exports", "./chunk-346f9d40.js", "./chunk-cc018d56.js" ], function(e, t, n) {
  var o = window.App.h, i = {
    1: "Mainnet",
    3: "Ropsten",
    42: "Kovan",
    4: "Rinkeby"
  }, c = /** @class */ function() {
    function WidgetConnection() {
      this.network = "", this.metamaskUnlocked = !1, this.hasDetectedNetwork = !1;
    }
    return WidgetConnection.prototype.render = function() {
      if (this.hasDetectedNetwork) return this.network ? this.metamaskUnlocked ? o("div", {
        class: "connection"
      }, o("span", {
        class: "dot connected"
      }), o("span", {
        class: "status"
      }, "Connected to " + i[this.network])) : o("div", {
        class: "connection"
      }, o("span", {
        class: "dot locked"
      }), o("span", {
        class: "status"
      }, "Wallet locked")) : o("div", {
        class: "connection"
      }, o("widget-tooltip", {
        message: this.metamaskUnlocked ? "Must be connected to Ropsten" : void 0
      }, o("span", {
        class: "dot"
      }), o("span", {
        class: "status"
      }, "No connection")));
    }, Object.defineProperty(WidgetConnection, "is", {
      get: function() {
        return "widget-connection";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(WidgetConnection, "encapsulation", {
      get: function() {
        return "shadow";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(WidgetConnection, "properties", {
      get: function() {
        return {
          el: {
            elementRef: !0
          },
          hasDetectedNetwork: {
            type: Boolean,
            attr: "has-detected-network"
          },
          metamaskUnlocked: {
            type: Boolean,
            attr: "metamask-unlocked"
          },
          network: {
            type: String,
            attr: "network"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(WidgetConnection, "style", {
      get: function() {
        return "/**style-placeholder:widget-connection:**/";
      },
      enumerable: !0,
      configurable: !0
    }), WidgetConnection;
  }();
  n.WalletTunnel.injectProps(c, [ "network", "metamaskUnlocked", "hasDetectedNetwork" ]);
  var r = /** @class */ function() {
    function WidgetLogo() {
      this.caption = "";
    }
    return WidgetLogo.prototype.render = function() {
      return o("h1", {
        class: "logo " + (this.caption ? "logo--icon-only" : "")
      }, o("stencil-route-link", {
        url: "/"
      }, o("img", {
        src: "/assets/icon/logo.svg",
        alt: "Counterfactual"
      }), this.caption ? this.caption : o("span", null, "Playground")));
    }, Object.defineProperty(WidgetLogo, "is", {
      get: function() {
        return "widget-logo";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(WidgetLogo, "encapsulation", {
      get: function() {
        return "shadow";
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(WidgetLogo, "properties", {
      get: function() {
        return {
          caption: {
            type: String,
            attr: "caption"
          }
        };
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(WidgetLogo, "style", {
      get: function() {
        return "/**style-placeholder:widget-logo:**/";
      },
      enumerable: !0,
      configurable: !0
    }), WidgetLogo;
  }();
  e.WidgetConnection = c, e.WidgetLogo = r, Object.defineProperty(e, "__esModule", {
    value: !0
  });
});