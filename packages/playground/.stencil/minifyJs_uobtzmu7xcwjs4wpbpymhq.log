import * as tslib_1 from "../polyfills/tslib.js";

import { h } from "../app.core.js";

import "./chunk-deed3e85.js";

import { a as AccountTunnel } from "./chunk-dfef6d51.js";

import { a as PlaygroundAPIClient } from "./chunk-adf5a5b1.js";

var AccountEdit = /** @class */ function() {
  function AccountEdit() {
    this.user = {}, this.updateAccount = function(t) {}, this.history = {}, this.logout = function() {}, 
    this.userLoaded = !1, this.changeset = {
      username: "",
      email: "",
      ethAddress: "",
      nodeAddress: "",
      id: ""
    };
  }
  return AccountEdit.prototype.updateChangeset = function() {
    this.userLoaded || (this.changeset.id = this.user.id, this.changeset.ethAddress = this.user.ethAddress, 
    this.changeset.email = this.user.email, this.changeset.username = this.user.username, 
    this.changeset.nodeAddress = this.user.nodeAddress, this.userLoaded = !0);
  }, AccountEdit.prototype.change = function(t, e) {
    this.changeset[t] = e.target.value;
  }, AccountEdit.prototype.formSubmissionHandler = function() {
    return tslib_1.__awaiter(this, void 0, void 0, function() {
      var t;
      return tslib_1.__generator(this, function(e) {
        switch (e.label) {
         case 0:
          return [ 4 /*yield*/ , PlaygroundAPIClient.updateAccount(this.changeset) ];

         case 1:
          return t = e.sent(), this.updateAccount({
            user: t
          }), window.localStorage.setItem("playground:user:token", t.token), this.history.push("/"), 
          [ 2 /*return*/ ];
        }
      });
    });
  }, AccountEdit.prototype.logoutClickedHandler = function() {
    this.logout(), this.history.push("/");
  }, AccountEdit.prototype.render = function() {
    var t = this;
    return h("widget-screen", null, h("div", {
      slot: "header"
    }, "Account Settings"), h("form-container", {
      onFormSubmitted: function(e) {
        return t.formSubmissionHandler();
      }
    }, h("form-input", {
      label: "Username",
      disabled: !0,
      value: this.changeset.username
    }), h("form-input", {
      label: "Email",
      value: this.changeset.email,
      onChange: function(e) {
        return t.change("email", e);
      }
    }), h("div", {
      class: "smallprint"
    }, h("b", null, "Your account is linked to your Ethereum address: "), this.changeset.ethAddress), h("form-button", {
      class: "button",
      onButtonPressed: function(e) {
        return t.formSubmissionHandler();
      }
    }, "Save changes"), h("form-button", {
      class: "button button--secondary",
      onButtonPressed: function(e) {
        return t.logoutClickedHandler();
      }
    }, "Log out")));
  }, Object.defineProperty(AccountEdit, "is", {
    get: function() {
      return "account-edit";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(AccountEdit, "encapsulation", {
    get: function() {
      return "shadow";
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(AccountEdit, "properties", {
    get: function() {
      return {
        el: {
          elementRef: !0
        },
        history: {
          type: "Any",
          attr: "history"
        },
        logout: {
          type: "Any",
          attr: "logout"
        },
        updateAccount: {
          type: "Any",
          attr: "update-account"
        },
        user: {
          type: "Any",
          attr: "user",
          watchCallbacks: [ "updateChangeset" ]
        },
        userLoaded: {
          state: !0
        }
      };
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(AccountEdit, "style", {
    get: function() {
      return "/**style-placeholder:account-edit:**/";
    },
    enumerable: !0,
    configurable: !0
  }), AccountEdit;
}();

AccountTunnel.injectProps(AccountEdit, [ "updateAccount", "user", "logout" ]);

export { AccountEdit };