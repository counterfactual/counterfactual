

var e = "/", t = "./", n = new RegExp([ "(\\\\.)", "(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?" ].join("|"), "g");

function escapeString(e) {
  return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
}

function escapeGroup(e) {
  return e.replace(/([=!:$\/()])/g, "\\$1");
}

function flags(e) {
  return e && e.sensitive ? "" : "i";
}

function pathToRegexp(a, r, s) {
  return a instanceof RegExp ? function(e, t) {
    if (!t) return e;
    var n = e.source.match(/\((?!\?)/g);
    if (n) for (var a = 0; a < n.length; a++) t.push({
      name: a,
      prefix: null,
      delimiter: null,
      optional: !1,
      repeat: !1,
      partial: !1,
      pattern: null
    });
    return e;
  }(a, r) : Array.isArray(a) ? function(e, t, n) {
    for (var a = [], r = 0; r < e.length; r++) a.push(pathToRegexp(e[r], t, n).source);
    return new RegExp("(?:" + a.join("|") + ")", flags(n));
  }(a, r, s) : function(a, r, s) {
    return function(n, a, r) {
      for (var s = (r = r || {}).strict, i = !1 !== r.end, o = escapeString(r.delimiter || e), c = r.delimiters || t, u = [].concat(r.endsWith || []).map(escapeString).concat("$").join("|"), l = "", h = !1, p = 0; p < n.length; p++) {
        var f = n[p];
        if ("string" == typeof f) l += escapeString(f), h = p === n.length - 1 && c.indexOf(f[f.length - 1]) > -1; else {
          var d = escapeString(f.prefix || ""), g = f.repeat ? "(?:" + f.pattern + ")(?:" + d + "(?:" + f.pattern + "))*" : f.pattern;
          a && a.push(f), l += f.optional ? f.partial ? d + "(" + g + ")?" : "(?:" + d + "(" + g + "))?" : d + "(" + g + ")";
        }
      }
      return i ? (s || (l += "(?:" + o + ")?"), l += "$" === u ? "$" : "(?=" + u + ")") : (s || (l += "(?:" + o + "(?=" + u + "))?"), 
      h || (l += "(?=" + o + "|" + u + ")")), new RegExp("^" + l, flags(r));
    }(function(a, r) {
      for (var s, i = [], o = 0, c = 0, u = "", l = r && r.delimiter || e, h = r && r.delimiters || t, p = !1; null !== (s = n.exec(a)); ) {
        var f = s[0], d = s[1], g = s.index;
        if (u += a.slice(c, g), c = g + f.length, d) u += d[1], p = !0; else {
          var m = "", v = a[c], y = s[2], x = s[3], A = s[4], E = s[5];
          if (!p && u.length) {
            var w = u.length - 1;
            h.indexOf(u[w]) > -1 && (m = u[w], u = u.slice(0, w));
          }
          u && (i.push(u), u = "", p = !1);
          var O = m || l, b = x || A;
          i.push({
            name: y || o++,
            prefix: m,
            delimiter: O,
            optional: "?" === E || "*" === E,
            repeat: "+" === E || "*" === E,
            partial: "" !== m && void 0 !== v && v !== m,
            pattern: b ? escapeGroup(b) : "[^" + escapeString(O) + "]+?"
          });
        }
      }
      return (u || c < a.length) && i.push(u + a.substr(c)), i;
    }(a, s), r, s);
  }(a, r, s);
}

function hasBasename(e, t) {
  return new RegExp("^" + t + "(\\/|\\?|#|$)", "i").test(e);
}

function stripBasename(e, t) {
  return hasBasename(e, t) ? e.substr(t.length) : e;
}

function stripTrailingSlash(e) {
  return "/" === e.charAt(e.length - 1) ? e.slice(0, -1) : e;
}

function addLeadingSlash(e) {
  return "/" === e.charAt(0) ? e : "/" + e;
}

function stripLeadingSlash(e) {
  return "/" === e.charAt(0) ? e.substr(1) : e;
}

function createPath(e) {
  const {pathname: t, search: n, hash: a} = e;
  let r = t || "/";
  return n && "?" !== n && (r += "?" === n.charAt(0) ? n : `?${n}`), a && "#" !== a && (r += "#" === a.charAt(0) ? a : `#${a}`), 
  r;
}

function isAbsolute(e) {
  return "/" === e.charAt(0);
}

function createKey(e) {
  return Math.random().toString(36).substr(2, e);
}

function spliceOne(e, t) {
  for (let n = t, a = n + 1, r = e.length; a < r; n += 1, a += 1) e[n] = e[a];
  e.pop();
}

function valueEqual(e, t) {
  if (e === t) return !0;
  if (null == e || null == t) return !1;
  if (Array.isArray(e)) return Array.isArray(t) && e.length === t.length && e.every(function(e, n) {
    return valueEqual(e, t[n]);
  });
  const n = typeof e;
  if (n !== typeof t) return !1;
  if ("object" === n) {
    const n = e.valueOf(), a = t.valueOf();
    if (n !== e || a !== t) return valueEqual(n, a);
    const r = Object.keys(e), s = Object.keys(t);
    return r.length === s.length && r.every(function(n) {
      return valueEqual(e[n], t[n]);
    });
  }
  return !1;
}

function locationsAreEqual(e, t) {
  return e.pathname === t.pathname && e.search === t.search && e.hash === t.hash && e.key === t.key && valueEqual(e.state, t.state);
}

function createLocation(e, t, n, a) {
  let r;
  "string" == typeof e ? void 0 !== (r = function(e) {
    let t = e || "/", n = "", a = "";
    const r = t.indexOf("#");
    -1 !== r && (a = t.substr(r), t = t.substr(0, r));
    const s = t.indexOf("?");
    return -1 !== s && (n = t.substr(s), t = t.substr(0, s)), {
      pathname: t,
      search: "?" === n ? "" : n,
      hash: "#" === a ? "" : a,
      query: {},
      key: ""
    };
  }(e)).state && (r.state = t) : ((r = Object.assign({
    pathname: ""
  }, e)).search && "?" !== r.search.charAt(0) && (r.search = "?" + r.search), r.hash && "#" !== r.hash.charAt(0) && (r.hash = "#" + r.hash), 
  void 0 !== t && void 0 === r.state && (r.state = t));
  try {
    r.pathname = decodeURI(r.pathname);
  } catch (e) {
    throw e instanceof URIError ? new URIError('Pathname "' + r.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.') : e;
  }
  var s;
  return r.key = n, a ? r.pathname ? "/" !== r.pathname.charAt(0) && (r.pathname = function(e, t = "") {
    const n = e && e.split("/") || [];
    let a = t && t.split("/") || [];
    const r = e && isAbsolute(e), s = t && isAbsolute(t), i = r || s;
    if (e && isAbsolute(e) ? a = n : n.length && (a.pop(), a = a.concat(n)), !a.length) return "/";
    let o;
    if (a.length) {
      const e = a[a.length - 1];
      o = "." === e || ".." === e || "" === e;
    } else o = !1;
    let c = 0;
    for (let e = a.length; e >= 0; e--) {
      const t = a[e];
      "." === t ? spliceOne(a, e) : ".." === t ? (spliceOne(a, e), c++) : c && (spliceOne(a, e), 
      c--);
    }
    if (!i) for (;c--; c) a.unshift("..");
    !i || "" === a[0] || a[0] && isAbsolute(a[0]) || a.unshift("");
    let u = a.join("/");
    return o && "/" !== u.substr(-1) && (u += "/"), u;
  }(r.pathname, a.pathname)) : r.pathname = a.pathname : r.pathname || (r.pathname = "/"), 
  r.query = (s = r.search || "") ? (/^[?#]/.test(s) ? s.slice(1) : s).split("&").reduce((e, t) => {
    let [n, a] = t.split("=");
    return e[n] = a ? decodeURIComponent(a.replace(/\+/g, " ")) : "", e;
  }, {}) : {}, r;
}

const a = {}, r = 1e4;

let s = 0;

function matchPath(e, t = {}) {
  "string" == typeof t && (t = {
    path: t
  });
  const {path: n = "/", exact: i = !1, strict: o = !1} = t, {re: c, keys: u} = function(e, t) {
    const n = `${t.end}${t.strict}`, i = a[n] || (a[n] = {}), o = JSON.stringify(e);
    if (i[o]) return i[o];
    const c = [], u = {
      re: pathToRegexp(e, c, t),
      keys: c
    };
    return s < r && (i[o] = u, s += 1), u;
  }(n, {
    end: i,
    strict: o
  }), l = c.exec(e);
  if (!l) return null;
  const [h, ...p] = l, f = e === h;
  return i && !f ? null : {
    path: n,
    url: "/" === n && "" === h ? "/" : h,
    isExact: f,
    params: u.reduce((e, t, n) => (e[t.name] = p[n], e), {})
  };
}

function matchesAreEqual(e, t) {
  return null == e && null == t || null != t && e && t && e.path === t.path && e.url === t.url && valueEqual(e.params, t.params);
}

const i = !("undefined" == typeof window || !window.document || !window.document.createElement), o = (e, t, n) => e.addEventListener ? e.addEventListener(t, n, !1) : e.attachEvent("on" + t, n), c = (e, t, n) => e.removeEventListener ? e.removeEventListener(t, n, !1) : e.detachEvent("on" + t, n), u = (e, t) => t(window.confirm(e)), l = e => e.metaKey || e.altKey || e.ctrlKey || e.shiftKey, h = () => {
  const e = window.navigator.userAgent;
  return (-1 === e.indexOf("Android 2.") && -1 === e.indexOf("Android 4.0") || -1 === e.indexOf("Mobile Safari") || -1 !== e.indexOf("Chrome") || -1 !== e.indexOf("Windows Phone")) && window.history && "pushState" in window.history;
}, p = () => -1 === window.navigator.userAgent.indexOf("Trident"), f = () => -1 === window.navigator.userAgent.indexOf("Firefox"), d = e => void 0 === e.state && -1 === navigator.userAgent.indexOf("CriOS"), g = e => {
  var t = window[e], n = "__storage_test__";
  try {
    return t.setItem(n, n), t.removeItem(n), !0;
  } catch (e) {
    return e instanceof DOMException && (22 === e.code || 1014 === e.code || "QuotaExceededError" === e.name || "NS_ERROR_DOM_QUOTA_REACHED" === e.name) && 0 !== t.length;
  }
};

export { matchPath as a, matchesAreEqual as b, g as c, i as d, h as e, p as f, u as g, stripTrailingSlash as h, addLeadingSlash as i, hasBasename as j, stripBasename as k, createLocation as l, createKey as m, createPath as n, o, c as p, d as q, f as r, stripLeadingSlash as s, locationsAreEqual as t, l as u };