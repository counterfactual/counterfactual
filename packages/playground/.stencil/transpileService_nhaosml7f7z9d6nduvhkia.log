{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/app-home/apps-list/apps-list.tsx","localImports":["/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/account"],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"apps-list-item"}],"cmpMeta":{"tagNameMeta":"apps-list","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/app-home/apps-list/apps-list.scss","cmpRelativePath":"apps-list.scss","originalComponentPath":"apps-list.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppsList","tags":[],"documentation":"","type":"typeof AppsList"},"encapsulationMeta":1,"componentClass":"AppsList","membersMeta":{"el":{"memberType":64},"apps":{"memberType":1,"attribName":"apps","attribType":{"text":"AppDefinition[]","required":false,"optional":false,"typeReferences":{"AppDefinition":{"referenceLocation":"import","importReferenceLocation":"../../../types"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"apps","tags":[],"documentation":"","type":"AppDefinition[]","default":"[]"}},"name":{"memberType":1,"attribName":"name","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"name","tags":[],"documentation":"","type":"string","default":"\"\""}},"user":{"memberType":1,"attribName":"user","attribType":{"text":"UserSession","required":false,"optional":false,"typeReferences":{"UserSession":{"referenceLocation":"import","importReferenceLocation":"../../../types"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"user","tags":[],"documentation":"","type":"{ id: string; username: string; ethAddress: string; nodeAddress: string; email: string; multisigAddress: string; transactionHash: string; token?: string; }","default":"{} as UserSession"}}},"eventsMeta":[{"eventMethodName":"appClicked","eventName":"appClicked","eventBubbles":true,"eventCancelable":true,"eventComposed":true,"jsdoc":{"name":"appClicked","tags":[],"documentation":"","type":"EventEmitter<any>"}}],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/app-home/apps-list/apps-list.js"},"jsText":"import AccountTunnel from \"../../../data/account\";\r\nexport class AppsList {\r\n    constructor() {\r\n        this.el = {};\r\n        this.appClicked = {};\r\n        this.apps = [];\r\n        this.name = \"\";\r\n        this.user = {};\r\n    }\r\n    appClickedHandler(event) {\r\n        this.appClicked.emit(event.detail);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"apps\" },\r\n            h(\"h2\", { class: \"title\" }, this.name),\r\n            h(\"ul\", { class: \"list\" }, this.apps.map(app => (h(\"apps-list-item\", { onAppClicked: e => this.appClickedHandler(e), icon: app.icon, name: app.name, notifications: app.notifications, url: app.url }))))));\r\n    }\r\n    static get is() { return \"apps-list\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"apps\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"apps\"\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"name\": {\r\n            \"type\": String,\r\n            \"attr\": \"name\"\r\n        },\r\n        \"user\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"user\"\r\n        }\r\n    }; }\r\n    static get events() { return [{\r\n            \"name\": \"appClicked\",\r\n            \"method\": \"appClicked\",\r\n            \"bubbles\": true,\r\n            \"cancelable\": true,\r\n            \"composed\": true\r\n        }]; }\r\n    static get style() { return \"/**style-placeholder:apps-list:**/\"; }\r\n}\r\nAccountTunnel.injectProps(AppsList, [\"user\"]);\r\n"}