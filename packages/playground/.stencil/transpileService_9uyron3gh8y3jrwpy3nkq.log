{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/app-home/app-home/app-home.tsx","localImports":["/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/account","/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/app-registry","/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/wallet"],"externalImports":["@stencil/core","@stencil/router"],"potentialCmpRefs":[{"tag":"widget-spinner"},{"tag":"apps-list"},{"tag":"stencil-route-link"},{"tag":"node-listener"},{"tag":"layout-header"}],"cmpMeta":{"tagNameMeta":"app-home","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/app-home/app-home/app-home.scss","cmpRelativePath":"app-home.scss","originalComponentPath":"app-home.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AppHome","tags":[],"documentation":"","type":"typeof AppHome"},"encapsulationMeta":1,"componentClass":"AppHome","membersMeta":{"element":{"memberType":64},"runningApps":{"memberType":16},"history":{"memberType":1,"attribName":"history","attribType":{"text":"RouterHistory","required":false,"optional":false,"typeReferences":{"RouterHistory":{"referenceLocation":"import","importReferenceLocation":"@stencil/router"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"history","tags":[],"documentation":"","type":"RouterHistory","default":"{} as RouterHistory"}},"apps":{"memberType":1,"attribName":"apps","attribType":{"text":"AppDefinition[]","required":false,"optional":false,"typeReferences":{"AppDefinition":{"referenceLocation":"import","importReferenceLocation":"../../../types"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"apps","tags":[],"documentation":"","type":"AppDefinition[]","default":"[]"}},"canUseApps":{"memberType":1,"attribName":"can-use-apps","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"canUseApps","tags":[],"documentation":"","type":"boolean","default":"false"}},"user":{"memberType":1,"attribName":"user","attribType":{"text":"UserSession","required":false,"optional":false,"typeReferences":{"UserSession":{"referenceLocation":"import","importReferenceLocation":"../../../types"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"user","tags":[],"documentation":"","type":"{ id: string; username: string; ethAddress: string; nodeAddress: string; email: string; multisigAddress: string; transactionHash: string; token?: string; }","default":"{} as UserSession"}},"web3Detected":{"memberType":1,"attribName":"web-3-detected","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"web3Detected","tags":[],"documentation":"","type":"boolean","default":"false"}},"hasDetectedNetwork":{"memberType":1,"attribName":"has-detected-network","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"hasDetectedNetwork","tags":[],"documentation":"","type":"boolean","default":"false"}},"networkPermitted":{"memberType":1,"attribName":"network-permitted","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"networkPermitted","tags":[],"documentation":"","type":"boolean","default":"false"}},"enoughCounterpartyBalance":{"memberType":1,"attribName":"enough-counterparty-balance","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"enoughCounterpartyBalance","tags":[],"documentation":"","type":"boolean","default":"true"}},"enoughLocalBalance":{"memberType":1,"attribName":"enough-local-balance","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"enoughLocalBalance","tags":[],"documentation":"","type":"boolean","default":"true"}},"ethPendingDepositAmountWei":{"memberType":1,"attribName":"eth-pending-deposit-amount-wei","attribType":{"text":"any","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":1,"jsdoc":{"name":"ethPendingDepositAmountWei","tags":[],"documentation":"","type":"any"}},"ethPendingDepositTxHash":{"memberType":1,"attribName":"eth-pending-deposit-tx-hash","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"ethPendingDepositTxHash","tags":[],"documentation":"","type":"string","default":"\"\""}},"hasLocalStorage":{"memberType":1,"attribName":"has-local-storage","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"hasLocalStorage","tags":[],"documentation":"","type":"boolean","default":"false"}},"hasCorruptStateChannelState":{"memberType":1,"attribName":"has-corrupt-state-channel-state","attribType":{"text":"boolean","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":4,"jsdoc":{"name":"hasCorruptStateChannelState","tags":[],"documentation":"","type":"boolean","default":"false"}},"deleteAccount":{"memberType":1,"attribName":"delete-account","attribType":{"text":"() => Promise<void>","required":false,"optional":true,"typeReferences":{"Promise":{"referenceLocation":"global"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"deleteAccount","tags":[],"documentation":"","type":"() => Promise<void>"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/app-home/app-home/app-home.js"},"jsText":"import AccountTunnel from \"../../../data/account\";\r\nimport AppRegistryTunnel from \"../../../data/app-registry\";\r\nimport WalletTunnel from \"../../../data/wallet\";\r\nexport class AppHome {\r\n    constructor() {\r\n        this.history = {};\r\n        this.apps = [];\r\n        this.canUseApps = false;\r\n        this.user = {};\r\n        this.web3Detected = false;\r\n        this.hasDetectedNetwork = false;\r\n        this.networkPermitted = false;\r\n        this.enoughCounterpartyBalance = true;\r\n        this.enoughLocalBalance = true;\r\n        this.ethPendingDepositTxHash = \"\";\r\n        this.hasLocalStorage = false;\r\n        this.hasCorruptStateChannelState = false;\r\n        this.runningApps = [];\r\n    }\r\n    appClickedHandler(e) {\r\n        this.history.push(e.detail.dappContainerUrl, e.detail);\r\n    }\r\n    async componentWillLoad() {\r\n        this.runningApps = [Object.assign({}, this.apps[0], { notifications: 11 })];\r\n    }\r\n    checkLocalStorage() {\r\n        if (this.hasLocalStorage) {\r\n            return;\r\n        }\r\n        const texts = {\r\n            brave: {\r\n                title: \"Please, lower your Shields!\",\r\n                instruction: (h(\"span\", null,\r\n                    \"Please, turn off the \",\r\n                    h(\"i\", null, \"Shields Up\"),\r\n                    \" feature for this site to continue.\"))\r\n            },\r\n            chrome: {\r\n                title: \"Please, allow site data!\",\r\n                instruction: (h(\"span\", null,\r\n                    \"Please, unblock \",\r\n                    h(\"i\", null, \"Cookies\"),\r\n                    \" in your settings, under\",\r\n                    \" \",\r\n                    h(\"i\", null, \"Privacy \\u2192 Content settings\"),\r\n                    \".\"))\r\n            },\r\n            edge: {\r\n                title: \"Please, unblock us!\",\r\n                instruction: (h(\"span\", null,\r\n                    \"Please, uncheck the \",\r\n                    h(\"i\", null, \"Block all cookies\"),\r\n                    \" option in your settings, under \",\r\n                    h(\"i\", null, \"Advanced Settings \\u2192 Cookies\"),\r\n                    \".\"))\r\n            },\r\n            firefox: {\r\n                title: \"Please, enable DOM Storage!\",\r\n                instruction: (h(\"span\", null,\r\n                    \"Please, set the \",\r\n                    h(\"code\", null, \"dom.storage.enabled\"),\r\n                    \" key to\",\r\n                    \" \",\r\n                    h(\"code\", null, \"true\"),\r\n                    \" in your \",\r\n                    h(\"code\", null, \"about:config\"),\r\n                    \" screen.\"))\r\n            },\r\n            safari: {\r\n                title: \"Please, unblock us!\",\r\n                instruction: (h(\"span\", null,\r\n                    \"Please, uncheck the \",\r\n                    h(\"i\", null, \"Always block\"),\r\n                    \" option in your settings, under \",\r\n                    h(\"i\", null, \"Preferences \\u2192 Privacy \\u2192 Cookies and website data\"),\r\n                    \".\"))\r\n            },\r\n            default: {\r\n                title: \"Please, allow us to store data\",\r\n                instruction: (h(\"span\", null, \"The Playground demo uses Local Storage to work properly. Please, configure your browser to grant us access.\"))\r\n            }\r\n        };\r\n        let text = {};\r\n        if (navigator.userAgent.indexOf(\"brave\") >= 0) {\r\n            text = texts.brave;\r\n        }\r\n        else if (navigator.userAgent.indexOf(\"Chrome\") >= 0 &&\r\n            navigator.vendor.indexOf(\"Google\") >= 0) {\r\n            text = texts.chrome;\r\n        }\r\n        else if (navigator.userAgent.indexOf(\"Edge\") >= 0) {\r\n            text = texts.edge;\r\n        }\r\n        else if (navigator.userAgent.indexOf(\"Safari\") >= 0) {\r\n            text = texts.safari;\r\n        }\r\n        else if (navigator.userAgent.indexOf(\"Firefox\") >= 0) {\r\n            text = texts.firefox;\r\n        }\r\n        else {\r\n            text = texts.default;\r\n        }\r\n        return (h(\"div\", { class: \"error-message\" },\r\n            h(\"h1\", null, text.title),\r\n            h(\"h2\", null,\r\n                \"The Playground Demo uses Local Storage to work properly.\",\r\n                \" \",\r\n                text.instruction),\r\n            h(\"p\", null,\r\n                h(\"strong\", null, \"What do we store?\"),\r\n                \" Basic information the demo needs to work, such as a mnemonic key to generate the address for your local Node instance, and the data the Node itself stores about the activity in the state channels you are part of.\")));\r\n    }\r\n    checkDetectedNetwork() {\r\n        if (this.hasDetectedNetwork) {\r\n            return;\r\n        }\r\n        return h(\"widget-spinner\", { type: \"dots\" });\r\n    }\r\n    getSuggestedWallet() {\r\n        return screen.width < 600 ? (h(\"span\", null,\r\n            h(\"a\", { href: \"https://wallet.coinbase.com/\" }, \"Coinbase Wallet\"),\r\n            \",\",\r\n            h(\"a\", { href: \"https://www.cipherbrowser.com/\" }, \" Cipher\"),\r\n            \", or\",\r\n            h(\"a\", { href: \"https://dev.status.im/\" }, \" Status\"))) : (h(\"a\", { href: \"https://metamask.io/\" }, \"Metamask\"));\r\n    }\r\n    checkWeb3Detected() {\r\n        if (this.web3Detected) {\r\n            return;\r\n        }\r\n        return (h(\"div\", { class: \"error-message\" },\r\n            h(\"h2\", null,\r\n                \"Welcome to the Playground demo :) This demo requires a Web3-compatible wallet such as \",\r\n                this.getSuggestedWallet(),\r\n                \". Please enable or download one to continue!\")));\r\n    }\r\n    checkNetworkPermitted() {\r\n        if (this.networkPermitted) {\r\n            return;\r\n        }\r\n        return (h(\"div\", { class: \"error-message\" },\r\n            h(\"h1\", null, \"Please Switch to Kovan\"),\r\n            h(\"h2\", null, \"The Playground demo is currently only deployed on the Kovan test network. Please switch to continue.\")));\r\n    }\r\n    checkCorruptState() {\r\n        if (!this.hasCorruptStateChannelState) {\r\n            return;\r\n        }\r\n        return (h(\"div\", { class: \"error-message\" },\r\n            h(\"h1\", null, \"\\u2620\\uFE0F Corrupt Wallet State\"),\r\n            h(\"h2\", null,\r\n                \"Unfortunately, your state channel state has become corrupted or lost. Please \",\r\n                h(\"a\", { onClick: this.deleteAccount }, \"click here\"),\r\n                \" to start over.\")));\r\n    }\r\n    showApps() {\r\n        return (h(\"div\", { class: \"container\" },\r\n            h(\"apps-list\", { apps: this.apps, onAppClicked: e => this.appClickedHandler(e), name: \"Available Apps\" }),\r\n            this.welcomeText()));\r\n    }\r\n    checkUserNotLoggedIn() {\r\n        if (this.user.id) {\r\n            return;\r\n        }\r\n        return this.welcomeText();\r\n    }\r\n    welcomeText() {\r\n        return (h(\"div\", { class: \"welcome-message\", style: { display: this.user.id ? \"contents\" : \"flex\" } },\r\n            !this.user.id ? h(\"h1\", null, \"Welcome! \\uD83D\\uDC4B\") : undefined,\r\n            !this.user.id ? (h(\"h2\", null,\r\n                \"This a demonstration of\",\r\n                \" \",\r\n                h(\"a\", { href: \"https://counterfactual.com/statechannels\" }, \"generalized state channels\"),\r\n                \" \",\r\n                \"on Ethereum.\")) : (undefined),\r\n            h(\"div\", { class: \"flex-container\" },\r\n                h(\"div\", { class: \"flex-item\" },\r\n                    h(\"h3\", null, \"What's going on here?\"),\r\n                    h(\"p\", null,\r\n                        \"You are now a Node in a hub-and-spoke state channels network demo called the Counterfactual Playground, running on Kovan. This webpage is your state channels wallet. Our team runs the hub. Users that connect to our hub can use an unlimited number of off-chain applications with \",\r\n                        h(\"b\", null, \"zero fees\"),\r\n                        \" and\",\r\n                        \" \",\r\n                        h(\"b\", null, \"zero block confirmation times\"),\r\n                        \". Want to try? Register or login to start.\")),\r\n                h(\"div\", { class: \"flex-item\" },\r\n                    h(\"h3\", null, \"How does it work?\"),\r\n                    h(\"p\", null,\r\n                        \"This demo is built using\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://counterfactual.com\" }, \"Counterfactual\"),\r\n                        \". We've written all about the internal architecture in\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://medium.com/statechannels/development-update-3-counterfactual-playground-release-f428be4b8950\" }, \"this blog post\"),\r\n                        \". To learn more, check out our\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://github.com/counterfactual\" }, \"GitHub\"),\r\n                        \" page and follow us on\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://twitter.com/statechannels\" }, \"Twitter\")))),\r\n            h(\"div\", { class: \"flex-container\" },\r\n                h(\"div\", { class: \"flex-item\" },\r\n                    h(\"h3\", null, \"What is Counterfactual?\"),\r\n                    h(\"p\", null,\r\n                        \"Counterfactual is an open-source project comprised of several components:\",\r\n                        h(\"ul\", null,\r\n                            h(\"li\", null, \"\\u2022 A library for off-chain applications\"),\r\n                            h(\"li\", null, \"\\u2022 An intuitive generalized state channels protocol\"),\r\n                            h(\"li\", null, \"\\u2022 A set of Ethereum smart contracts\")),\r\n                        \" \",\r\n                        \"It enables developers to build trustless distributed applications with minimal overhead. Watch\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://youtu.be/tfKtLNlPL2w?t=72\", target: \"_blank\" }, \"our recent talk\"),\r\n                        \" \",\r\n                        \"at EthCC for more.\")),\r\n                h(\"div\", { class: \"flex-item\" },\r\n                    h(\"h3\", null, \"How is this secure?\"),\r\n                    h(\"p\", null,\r\n                        \"Counterfactual uses state channels, a Layer 2 scalability technique. For a complete overview, read\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://medium.com/l4-media/making-sense-of-ethereums-layer-2-scaling-solutions-state-channels-plasma-and-truebit-22cb40dcc2f4\", target: \"_blank\" }, \"Making Sense of Layer 2\"),\r\n                        \" \",\r\n                        \"or watch the associated\",\r\n                        \" \",\r\n                        h(\"a\", { href: \"https://www.youtube.com/watch?v=RghzB4C9aSg\", target: \"_blank\" }, \"talk from Devcon IV\"),\r\n                        \".\")))));\r\n    }\r\n    checkInsufficientBalance() {\r\n        if (!this.user || !this.user.multisigAddress) {\r\n            return;\r\n        }\r\n        if (!this.enoughLocalBalance) {\r\n            return (h(\"div\", { class: \"error-message\" },\r\n                h(\"h1\", null, \"Insufficient funds\"),\r\n                h(\"h2\", null,\r\n                    \"Your balance needs to be of at least 0.01 ETH.\",\r\n                    h(\"br\", null),\r\n                    h(\"br\", null),\r\n                    h(\"stencil-route-link\", { url: \"/exchange\" }, \"Click here\"),\r\n                    \" \",\r\n                    \"to deposit more funds.\")));\r\n        }\r\n        if (!this.enoughCounterpartyBalance) {\r\n            return (h(\"div\", { class: \"error-message\" },\r\n                h(\"h1\", null, \"The Playground Node has insufficient funds\"),\r\n                h(\"h2\", null,\r\n                    \"Eventually we'll take care of this automatically, but in the meantime, you'll need to deposit some ETH.\",\r\n                    h(\"br\", null),\r\n                    h(\"br\", null),\r\n                    h(\"stencil-route-link\", { url: \"/exchange\" }, \"Click here\"),\r\n                    \" \",\r\n                    \"to deposit more funds.\")));\r\n        }\r\n    }\r\n    render() {\r\n        const content = this.checkLocalStorage() ||\r\n            this.checkDetectedNetwork() ||\r\n            this.checkWeb3Detected() ||\r\n            this.checkNetworkPermitted() ||\r\n            this.checkUserNotLoggedIn() ||\r\n            this.checkInsufficientBalance() ||\r\n            this.checkCorruptState() ||\r\n            this.showApps();\r\n        return this.hasLocalStorage ? (h(\"node-listener\", { history: this.history },\r\n            h(\"layout-header\", null),\r\n            h(\"section\", { class: \"section fill\" }, content),\r\n            h(\"a\", { id: \"discordbutton\", href: \"https://discord.gg/7SMbDz\", target: \"_blank\" }))) : (h(\"div\", null,\r\n            h(\"layout-header\", null),\r\n            h(\"section\", { class: \"section fill\" }, content)));\r\n    }\r\n    static get is() { return \"app-home\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"apps\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"apps\"\r\n        },\r\n        \"canUseApps\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"can-use-apps\"\r\n        },\r\n        \"deleteAccount\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"delete-account\"\r\n        },\r\n        \"element\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"enoughCounterpartyBalance\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"enough-counterparty-balance\"\r\n        },\r\n        \"enoughLocalBalance\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"enough-local-balance\"\r\n        },\r\n        \"ethPendingDepositAmountWei\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"eth-pending-deposit-amount-wei\"\r\n        },\r\n        \"ethPendingDepositTxHash\": {\r\n            \"type\": String,\r\n            \"attr\": \"eth-pending-deposit-tx-hash\"\r\n        },\r\n        \"hasCorruptStateChannelState\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"has-corrupt-state-channel-state\"\r\n        },\r\n        \"hasDetectedNetwork\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"has-detected-network\"\r\n        },\r\n        \"hasLocalStorage\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"has-local-storage\"\r\n        },\r\n        \"history\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"history\"\r\n        },\r\n        \"networkPermitted\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"network-permitted\"\r\n        },\r\n        \"runningApps\": {\r\n            \"state\": true\r\n        },\r\n        \"user\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"user\"\r\n        },\r\n        \"web3Detected\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"web-3-detected\"\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:app-home:**/\"; }\r\n}\r\nAppRegistryTunnel.injectProps(AppHome, [\"apps\", \"canUseApps\"]);\r\nWalletTunnel.injectProps(AppHome, [\r\n    \"web3Detected\",\r\n    \"networkPermitted\",\r\n    \"hasDetectedNetwork\"\r\n]);\r\nAccountTunnel.injectProps(AppHome, [\r\n    \"user\",\r\n    \"hasCorruptStateChannelState\",\r\n    \"enoughCounterpartyBalance\",\r\n    \"enoughLocalBalance\",\r\n    \"ethPendingDepositAmountWei\",\r\n    \"ethPendingDepositTxHash\",\r\n    \"deleteAccount\"\r\n]);\r\n"}