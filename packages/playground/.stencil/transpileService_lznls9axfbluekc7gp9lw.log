{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-edit/account-edit.tsx","localImports":["/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/account","/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/data/playground-api-client"],"externalImports":["@stencil/core","@stencil/router"],"potentialCmpRefs":[{"tag":"widget-screen"},{"tag":"form-container"},{"tag":"form-input"},{"tag":"form-button"}],"cmpMeta":{"tagNameMeta":"account-edit","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-edit/account-edit.scss","cmpRelativePath":"account-edit.scss","originalComponentPath":"account-edit.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"AccountEdit","tags":[],"documentation":"","type":"typeof AccountEdit"},"encapsulationMeta":1,"componentClass":"AccountEdit","membersMeta":{"el":{"memberType":64},"userLoaded":{"memberType":16},"user":{"memberType":1,"attribName":"user","attribType":{"text":"UserSession","required":false,"optional":false,"typeReferences":{"UserSession":{"referenceLocation":"import","importReferenceLocation":"../../../types"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"user","tags":[],"documentation":"","type":"{ id: string; username: string; ethAddress: string; nodeAddress: string; email: string; multisigAddress: string; transactionHash: string; token?: string; }","default":"{} as UserSession"},"watchCallbacks":["updateChangeset"]},"updateAccount":{"memberType":1,"attribName":"update-account","attribType":{"text":"(e) => void","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"updateAccount","tags":[],"documentation":"","type":"(e: any) => void","default":"e => {}"}},"history":{"memberType":1,"attribName":"history","attribType":{"text":"RouterHistory","required":false,"optional":false,"typeReferences":{"RouterHistory":{"referenceLocation":"import","importReferenceLocation":"@stencil/router"}}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"history","tags":[],"documentation":"","type":"RouterHistory","default":"{} as RouterHistory"}},"logout":{"memberType":1,"attribName":"logout","attribType":{"text":"() => void","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":0,"jsdoc":{"name":"logout","tags":[],"documentation":"","type":"() => void","default":"() => {}"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/account/account-edit/account-edit.js"},"jsText":"import AccountTunnel from \"../../../data/account\";\r\nimport PlaygroundAPIClient from \"../../../data/playground-api-client\";\r\nexport class AccountEdit {\r\n    constructor() {\r\n        this.user = {};\r\n        this.updateAccount = e => { };\r\n        this.history = {};\r\n        this.logout = () => { };\r\n        this.userLoaded = false;\r\n        this.changeset = {\r\n            username: \"\",\r\n            email: \"\",\r\n            ethAddress: \"\",\r\n            nodeAddress: \"\",\r\n            id: \"\"\r\n        };\r\n    }\r\n    updateChangeset() {\r\n        if (this.userLoaded) {\r\n            return;\r\n        }\r\n        this.changeset.id = this.user.id;\r\n        this.changeset.ethAddress = this.user.ethAddress;\r\n        this.changeset.email = this.user.email;\r\n        this.changeset.username = this.user.username;\r\n        this.changeset.nodeAddress = this.user.nodeAddress;\r\n        this.userLoaded = true;\r\n    }\r\n    change(key, event) {\r\n        this.changeset[key] = event.target.value;\r\n    }\r\n    async formSubmissionHandler() {\r\n        const updatedUser = await PlaygroundAPIClient.updateAccount(this.changeset);\r\n        this.updateAccount({ user: updatedUser });\r\n        window.localStorage.setItem(\"playground:user:token\", updatedUser.token);\r\n        this.history.push(\"/\");\r\n    }\r\n    logoutClickedHandler() {\r\n        this.logout();\r\n        this.history.push(\"/\");\r\n    }\r\n    render() {\r\n        return (h(\"widget-screen\", null,\r\n            h(\"div\", { slot: \"header\" }, \"Account Settings\"),\r\n            h(\"form-container\", { onFormSubmitted: e => this.formSubmissionHandler() },\r\n                h(\"form-input\", { label: \"Username\", disabled: true, value: this.changeset.username }),\r\n                h(\"form-input\", { label: \"Email\", value: this.changeset.email, onChange: e => this.change(\"email\", e) }),\r\n                h(\"div\", { class: \"smallprint\" },\r\n                    h(\"b\", null, \"Your account is linked to your Ethereum address: \"),\r\n                    this.changeset.ethAddress),\r\n                h(\"form-button\", { class: \"button\", onButtonPressed: e => this.formSubmissionHandler() }, \"Save changes\"),\r\n                h(\"form-button\", { class: \"button button--secondary\", onButtonPressed: e => this.logoutClickedHandler() }, \"Log out\"))));\r\n    }\r\n    static get is() { return \"account-edit\"; }\r\n    static get encapsulation() { return \"shadow\"; }\r\n    static get properties() { return {\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"history\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"history\"\r\n        },\r\n        \"logout\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"logout\"\r\n        },\r\n        \"updateAccount\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"update-account\"\r\n        },\r\n        \"user\": {\r\n            \"type\": \"Any\",\r\n            \"attr\": \"user\",\r\n            \"watchCallbacks\": [\"updateChangeset\"]\r\n        },\r\n        \"userLoaded\": {\r\n            \"state\": true\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:account-edit:**/\"; }\r\n}\r\nAccountTunnel.injectProps(AccountEdit, [\"updateAccount\", \"user\", \"logout\"]);\r\n"}