{"moduleFile":{"sourceFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/widgets/widget-connection/widget-connection.e2e.ts","localImports":[],"externalImports":["@stencil/core/testing","@stencil/core/testing"],"potentialCmpRefs":[{"html":"<widget-connection></widget-connection>"},{"html":"<widget-connection network='Lorem'></widget-connection>"},{"html":"<widget-connection network='Lorem'></widget-connection>"},{"html":"<widget-connection></widget-connection>"},{"html":"<widget-connection></widget-connection>"}],"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/arjun/repositories/counterfactual/monorepo/packages/playground/src/components/widgets/widget-connection/widget-connection.e2e.js"},"jsText":"import { newE2EPage } from \"@stencil/core/testing\";\r\ndescribe(\"widget-connection\", () => {\r\n    it(\"renders\", async () => {\r\n        const page = await newE2EPage();\r\n        await page.setContent(\"<widget-connection></widget-connection>\");\r\n        const element = await page.find(\"widget-connection\");\r\n        expect(element).toHaveClass(\"hydrated\");\r\n    });\r\n    it(\"applies to .connected class to the dot when network is set\", async () => {\r\n        const page = await newE2EPage();\r\n        await page.setContent(\"<widget-connection network='Lorem'></widget-connection>\");\r\n        const element = await page.find(\"widget-connection >>> .dot\");\r\n        expect(element).toHaveClass(\"connected\");\r\n    });\r\n    it(\"sets the status to 'Connected' when network is set\", async () => {\r\n        const page = await newE2EPage();\r\n        await page.setContent(\"<widget-connection network='Lorem'></widget-connection>\");\r\n        const element = await page.find(\"widget-connection >>> .status\");\r\n        expect(element.innerText).toEqual(\"Connected to Lorem\");\r\n    });\r\n    it(\"does not apply the .connected class to the dot when network isn't set\", async () => {\r\n        const page = await newE2EPage();\r\n        await page.setContent(\"<widget-connection></widget-connection>\");\r\n        const element = await page.find(\"widget-connection >>> .dot\");\r\n        expect(element).not.toHaveClass(\"connected\");\r\n    });\r\n    it(\"sets the status to 'No Connection' when network isn't set\", async () => {\r\n        const page = await newE2EPage();\r\n        await page.setContent(\"<widget-connection></widget-connection>\");\r\n        const element = await page.find(\"widget-connection >>> .status\");\r\n        expect(element.innerText).toEqual(\"No Connection\");\r\n    });\r\n});\r\n"}