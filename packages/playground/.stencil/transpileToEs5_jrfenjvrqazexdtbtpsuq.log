import * as tslib_1 from "tslib";
import { h } from '../app.core.js';
import './chunk-deed3e85.js';
import { a as AccountTunnel } from './chunk-dfef6d51.js';
import { a as PlaygroundAPIClient } from './chunk-adf5a5b1.js';
var AccountEdit = /** @class */ (function () {
    function AccountEdit() {
        this.user = {};
        this.updateAccount = function (e) { };
        this.history = {};
        this.logout = function () { };
        this.userLoaded = false;
        this.changeset = {
            username: "",
            email: "",
            ethAddress: "",
            nodeAddress: "",
            id: ""
        };
    }
    AccountEdit.prototype.updateChangeset = function () {
        if (this.userLoaded) {
            return;
        }
        this.changeset.id = this.user.id;
        this.changeset.ethAddress = this.user.ethAddress;
        this.changeset.email = this.user.email;
        this.changeset.username = this.user.username;
        this.changeset.nodeAddress = this.user.nodeAddress;
        this.userLoaded = true;
    };
    AccountEdit.prototype.change = function (key, event) {
        this.changeset[key] = event.target.value;
    };
    AccountEdit.prototype.formSubmissionHandler = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var updatedUser;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, PlaygroundAPIClient.updateAccount(this.changeset)];
                    case 1:
                        updatedUser = _a.sent();
                        this.updateAccount({ user: updatedUser });
                        window.localStorage.setItem("playground:user:token", updatedUser.token);
                        this.history.push("/");
                        return [2 /*return*/];
                }
            });
        });
    };
    AccountEdit.prototype.logoutClickedHandler = function () {
        this.logout();
        this.history.push("/");
    };
    AccountEdit.prototype.render = function () {
        var _this = this;
        return (h("widget-screen", null, h("div", { slot: "header" }, "Account Settings"), h("form-container", { onFormSubmitted: function (e) { return _this.formSubmissionHandler(); } }, h("form-input", { label: "Username", disabled: true, value: this.changeset.username }), h("form-input", { label: "Email", value: this.changeset.email, onChange: function (e) { return _this.change("email", e); } }), h("div", { class: "smallprint" }, h("b", null, "Your account is linked to your Ethereum address: "), this.changeset.ethAddress), h("form-button", { class: "button", onButtonPressed: function (e) { return _this.formSubmissionHandler(); } }, "Save changes"), h("form-button", { class: "button button--secondary", onButtonPressed: function (e) { return _this.logoutClickedHandler(); } }, "Log out"))));
    };
    Object.defineProperty(AccountEdit, "is", {
        get: function () { return "account-edit"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AccountEdit, "encapsulation", {
        get: function () { return "shadow"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AccountEdit, "properties", {
        get: function () {
            return {
                "el": {
                    "elementRef": true
                },
                "history": {
                    "type": "Any",
                    "attr": "history"
                },
                "logout": {
                    "type": "Any",
                    "attr": "logout"
                },
                "updateAccount": {
                    "type": "Any",
                    "attr": "update-account"
                },
                "user": {
                    "type": "Any",
                    "attr": "user",
                    "watchCallbacks": ["updateChangeset"]
                },
                "userLoaded": {
                    "state": true
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AccountEdit, "style", {
        get: function () { return "/**style-placeholder:account-edit:**/"; },
        enumerable: true,
        configurable: true
    });
    return AccountEdit;
}());
AccountTunnel.injectProps(AccountEdit, ["updateAccount", "user", "logout"]);
export { AccountEdit };
